{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "x",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "y",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "ChessSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "GameOver",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "currentPlayer",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isBlack",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameOver",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "x",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "y",
          "type": "uint8"
        }
      ],
      "name": "play",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "playerList",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isBlack",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isBlack",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_player1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_player2",
          "type": "address"
        }
      ],
      "name": "start",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isBlack",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Gobang.sol"
  },
  "ast": {
    "absolutePath": "contracts/Gobang.sol",
    "exportedSymbols": {
      "Gobang": [
        489
      ]
    },
    "id": 490,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Gobang",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 489,
        "linearizedBaseContracts": [
          489
        ],
        "name": "Gobang",
        "nameLocation": "34:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Gobang.Player",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "108:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "100:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "100:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "isBlack",
                "nameLocation": "127:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "122:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "122:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Player",
            "nameLocation": "83:6:0",
            "nodeType": "StructDefinition",
            "scope": 489,
            "src": "76:65:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Gobang.Chessboard",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "cells",
                "nameLocation": "224:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "210:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_uint8_$15_storage_$15_storage_ptr",
                  "typeString": "uint8[15][15]"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "id": 7,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "210:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 9,
                    "length": {
                      "hexValue": "3135",
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "216:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15_by_1",
                        "typeString": "int_const 15"
                      },
                      "value": "15"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "210:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$15_storage_ptr",
                      "typeString": "uint8[15]"
                    }
                  },
                  "id": 11,
                  "length": {
                    "hexValue": "3135",
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "220:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_15_by_1",
                      "typeString": "int_const 15"
                    },
                    "value": "15"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "210:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint8_$15_storage_$15_storage_ptr",
                    "typeString": "uint8[15][15]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Chessboard",
            "nameLocation": "189:10:0",
            "nodeType": "StructDefinition",
            "scope": 489,
            "src": "182:54:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f686af77",
            "id": 18,
            "mutability": "mutable",
            "name": "playerMapping",
            "nameLocation": "276:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 489,
            "src": "242:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$6_storage_$",
              "typeString": "mapping(address => struct Gobang.Player)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "250:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "242:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$6_storage_$",
                "typeString": "mapping(address => struct Gobang.Player)"
              },
              "valueType": {
                "id": 16,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15,
                  "name": "Player",
                  "nameLocations": [
                    "261:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6,
                  "src": "261:6:0"
                },
                "referencedDeclaration": 6,
                "src": "261:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$6_storage_ptr",
                  "typeString": "struct Gobang.Player"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ae6d9073",
            "id": 23,
            "mutability": "mutable",
            "name": "playerList",
            "nameLocation": "312:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 489,
            "src": "295:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Player_$6_storage_$2_storage",
              "typeString": "struct Gobang.Player[2]"
            },
            "typeName": {
              "baseType": {
                "id": 20,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 19,
                  "name": "Player",
                  "nameLocations": [
                    "295:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6,
                  "src": "295:6:0"
                },
                "referencedDeclaration": 6,
                "src": "295:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$6_storage_ptr",
                  "typeString": "struct Gobang.Player"
                }
              },
              "id": 22,
              "length": {
                "hexValue": "32",
                "id": 21,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "302:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "ArrayTypeName",
              "src": "295:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Player_$6_storage_$2_storage_ptr",
                "typeString": "struct Gobang.Player[2]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "chessboard",
            "nameLocation": "366:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 489,
            "src": "355:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Chessboard_$13_storage",
              "typeString": "struct Gobang.Chessboard"
            },
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Chessboard",
                "nameLocations": [
                  "355:10:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13,
                "src": "355:10:0"
              },
              "referencedDeclaration": 13,
              "src": "355:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Chessboard_$13_storage_ptr",
                "typeString": "struct Gobang.Chessboard"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4404a438",
            "id": 29,
            "mutability": "mutable",
            "name": "currentPlayer",
            "nameLocation": "423:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 489,
            "src": "409:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Player_$6_storage",
              "typeString": "struct Gobang.Player"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "Player",
                "nameLocations": [
                  "409:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6,
                "src": "409:6:0"
              },
              "referencedDeclaration": 6,
              "src": "409:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Player_$6_storage_ptr",
                "typeString": "struct Gobang.Player"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dfbf53ae",
            "id": 32,
            "mutability": "mutable",
            "name": "winner",
            "nameLocation": "457:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 489,
            "src": "443:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Player_$6_storage",
              "typeString": "struct Gobang.Player"
            },
            "typeName": {
              "id": 31,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30,
                "name": "Player",
                "nameLocations": [
                  "443:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6,
                "src": "443:6:0"
              },
              "referencedDeclaration": 6,
              "src": "443:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Player_$6_storage_ptr",
                "typeString": "struct Gobang.Player"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bdb337d1",
            "id": 34,
            "mutability": "mutable",
            "name": "gameOver",
            "nameLocation": "514:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 489,
            "src": "502:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 33,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "502:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "587:595:0",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41,
                        "name": "playerMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "630:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$6_storage_$",
                          "typeString": "mapping(address => struct Gobang.Player storage ref)"
                        }
                      },
                      "id": 43,
                      "indexExpression": {
                        "id": 42,
                        "name": "_player1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "644:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "630:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_storage",
                        "typeString": "struct Gobang.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45,
                          "name": "_player1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "663:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "673:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 44,
                        "name": "Player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "656:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Player_$6_storage_ptr_$",
                          "typeString": "type(struct Gobang.Player storage pointer)"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "656:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_memory_ptr",
                        "typeString": "struct Gobang.Player memory"
                      }
                    },
                    "src": "630:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$6_storage",
                      "typeString": "struct Gobang.Player storage ref"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "630:48:0"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50,
                        "name": "playerMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "688:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$6_storage_$",
                          "typeString": "mapping(address => struct Gobang.Player storage ref)"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "id": 51,
                        "name": "_player2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "702:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "688:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_storage",
                        "typeString": "struct Gobang.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 54,
                          "name": "_player2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "721:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "731:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 53,
                        "name": "Player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "714:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Player_$6_storage_ptr_$",
                          "typeString": "type(struct Gobang.Player storage pointer)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "714:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_memory_ptr",
                        "typeString": "struct Gobang.Player memory"
                      }
                    },
                    "src": "688:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$6_storage",
                      "typeString": "struct Gobang.Player storage ref"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "688:49:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59,
                        "name": "playerList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "748:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Player_$6_storage_$2_storage",
                          "typeString": "struct Gobang.Player storage ref[2] storage ref"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "759:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "748:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_storage",
                        "typeString": "struct Gobang.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 62,
                        "name": "playerMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "764:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$6_storage_$",
                          "typeString": "mapping(address => struct Gobang.Player storage ref)"
                        }
                      },
                      "id": 64,
                      "indexExpression": {
                        "id": 63,
                        "name": "_player1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "778:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "764:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_storage",
                        "typeString": "struct Gobang.Player storage ref"
                      }
                    },
                    "src": "748:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$6_storage",
                      "typeString": "struct Gobang.Player storage ref"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "748:39:0"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 67,
                        "name": "playerList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "797:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Player_$6_storage_$2_storage",
                          "typeString": "struct Gobang.Player storage ref[2] storage ref"
                        }
                      },
                      "id": 69,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "808:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "797:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_storage",
                        "typeString": "struct Gobang.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 70,
                        "name": "playerMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "813:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$6_storage_$",
                          "typeString": "mapping(address => struct Gobang.Player storage ref)"
                        }
                      },
                      "id": 72,
                      "indexExpression": {
                        "id": 71,
                        "name": "_player2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "827:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "813:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_storage",
                        "typeString": "struct Gobang.Player storage ref"
                      }
                    },
                    "src": "797:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$6_storage",
                      "typeString": "struct Gobang.Player storage ref"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "797:39:0"
                },
                {
                  "body": {
                    "id": 107,
                    "nodeType": "Block",
                    "src": "911:114:0",
                    "statements": [
                      {
                        "body": {
                          "id": 105,
                          "nodeType": "Block",
                          "src": "956:59:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 95,
                                        "name": "chessboard",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "974:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Chessboard_$13_storage",
                                          "typeString": "struct Gobang.Chessboard storage ref"
                                        }
                                      },
                                      "id": 99,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "985:5:0",
                                      "memberName": "cells",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12,
                                      "src": "974:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_array$_t_uint8_$15_storage_$15_storage",
                                        "typeString": "uint8[15] storage ref[15] storage ref"
                                      }
                                    },
                                    "id": 100,
                                    "indexExpression": {
                                      "id": 97,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76,
                                      "src": "991:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "974:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint8_$15_storage",
                                      "typeString": "uint8[15] storage ref"
                                    }
                                  },
                                  "id": 101,
                                  "indexExpression": {
                                    "id": 98,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86,
                                    "src": "994:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "974:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "999:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "974:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 104,
                              "nodeType": "ExpressionStatement",
                              "src": "974:26:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 89,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "943:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3135",
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "947:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          "src": "943:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 106,
                        "initializationExpression": {
                          "assignments": [
                            86
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 86,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "936:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 106,
                              "src": "930:7:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 85,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "930:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 88,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "940:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "930:11:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "951:3:0",
                            "subExpression": {
                              "id": 92,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "951:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 94,
                          "nodeType": "ExpressionStatement",
                          "src": "951:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "925:90:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 79,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "898:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3135",
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "902:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15_by_1",
                        "typeString": "int_const 15"
                      },
                      "value": "15"
                    },
                    "src": "898:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 108,
                  "initializationExpression": {
                    "assignments": [
                      76
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "891:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "885:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "885:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 78,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "895:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "885:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "906:3:0",
                      "subExpression": {
                        "id": 82,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "906:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 84,
                    "nodeType": "ExpressionStatement",
                    "src": "906:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "880:145:0"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "currentPlayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1068:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_storage",
                        "typeString": "struct Gobang.Player storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 110,
                        "name": "playerMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1084:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$6_storage_$",
                          "typeString": "mapping(address => struct Gobang.Player storage ref)"
                        }
                      },
                      "id": 113,
                      "indexExpression": {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1098:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1102:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1098:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1084:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$6_storage",
                        "typeString": "struct Gobang.Player storage ref"
                      }
                    },
                    "src": "1068:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Player_$6_storage",
                      "typeString": "struct Gobang.Player storage ref"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:41:0"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116,
                      "name": "gameOver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1159:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1170:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1159:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:16:0"
                }
              ]
            },
            "functionSelector": "3ccfe887",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "start",
            "nameLocation": "538:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_player1",
                  "nameLocation": "552:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "544:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_player2",
                  "nameLocation": "570:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "562:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:36:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:0:0"
            },
            "scope": 489,
            "src": "529:653:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1283:770:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1340:9:0",
                        "subExpression": {
                          "id": 129,
                          "name": "gameOver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "1341:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47616d65206f766572",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1351:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9c7a0860f40d548bf0c530d02f2002d9ba76078e8802b80e1faf1ba41be3d95",
                          "typeString": "literal_string \"Game over\""
                        },
                        "value": "Game over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9c7a0860f40d548bf0c530d02f2002d9ba76078e8802b80e1faf1ba41be3d95",
                          "typeString": "literal_string \"Game over\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1332:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1332:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 135,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1417:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1421:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1417:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 137,
                            "name": "currentPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1431:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$6_storage",
                              "typeString": "struct Gobang.Player storage ref"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1445:4:0",
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "1431:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1417:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420796f7572207475726e",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1451:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_746db83b91f9238ef7607175e5ee0bff737edd388bf5eb4499d812cc7c0099dd",
                          "typeString": "literal_string \"Not your turn\""
                        },
                        "value": "Not your turn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_746db83b91f9238ef7607175e5ee0bff737edd388bf5eb4499d812cc7c0099dd",
                          "typeString": "literal_string \"Not your turn\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1409:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1409:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 144,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "1527:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1532:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1527:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 147,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "1537:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "3135",
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1541:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_15_by_1",
                                  "typeString": "int_const 15"
                                },
                                "value": "15"
                              },
                              "src": "1537:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1527:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 151,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "1547:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1552:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1547:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1527:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 155,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "1557:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3135",
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1561:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          "src": "1557:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1527:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420706f736974696f6e",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_012b0dadb149cad2db16002f13ebb7167aac39ac22abba08b6ceb8547dc99251",
                          "typeString": "literal_string \"Invalid position\""
                        },
                        "value": "Invalid position"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_012b0dadb149cad2db16002f13ebb7167aac39ac22abba08b6ceb8547dc99251",
                          "typeString": "literal_string \"Invalid position\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1519:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 163,
                                "name": "chessboard",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "1644:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Chessboard_$13_storage",
                                  "typeString": "struct Gobang.Chessboard storage ref"
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1655:5:0",
                              "memberName": "cells",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12,
                              "src": "1644:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint8_$15_storage_$15_storage",
                                "typeString": "uint8[15] storage ref[15] storage ref"
                              }
                            },
                            "id": 166,
                            "indexExpression": {
                              "id": 165,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "1661:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1644:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$15_storage",
                              "typeString": "uint8[15] storage ref"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "id": 167,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "1664:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1644:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1670:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1644:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f736974696f6e206f63637570696564",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1674:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa240ce0d7f93af7b6a90e9df52037217f7e40fd338f645b89090073ddd362c3",
                          "typeString": "literal_string \"Position occupied\""
                        },
                        "value": "Position occupied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa240ce0d7f93af7b6a90e9df52037217f7e40fd338f645b89090073ddd362c3",
                          "typeString": "literal_string \"Position occupied\""
                        }
                      ],
                      "id": 162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1636:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:58:0"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "expression": {
                            "id": 174,
                            "name": "chessboard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1722:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Chessboard_$13_storage",
                              "typeString": "struct Gobang.Chessboard storage ref"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1733:5:0",
                          "memberName": "cells",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "1722:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_uint8_$15_storage_$15_storage",
                            "typeString": "uint8[15] storage ref[15] storage ref"
                          }
                        },
                        "id": 179,
                        "indexExpression": {
                          "id": 176,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "1739:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1722:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$15_storage",
                          "typeString": "uint8[15] storage ref"
                        }
                      },
                      "id": 180,
                      "indexExpression": {
                        "id": 177,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1742:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1722:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "expression": {
                          "id": 181,
                          "name": "currentPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1747:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$6_storage",
                            "typeString": "struct Gobang.Player storage ref"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1761:7:0",
                        "memberName": "isBlack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "1747:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "32",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1775:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "1747:29:0",
                      "trueExpression": {
                        "hexValue": "31",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1771:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1722:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:54:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1800:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 190,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1803:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1806:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1810:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1806:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 188,
                      "name": "ChessSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "1791:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,uint8,address)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "EmitStatement",
                  "src": "1786:31:0"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1840:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 197,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1842:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 195,
                      "name": "checkWin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "1831:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint8_$_t_uint8_$returns$_t_bool_$",
                        "typeString": "function (uint8,uint8) view returns (bool)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1831:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 223,
                    "nodeType": "Block",
                    "src": "1965:82:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 213,
                            "name": "currentPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1979:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$6_storage",
                              "typeString": "struct Gobang.Player storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 214,
                              "name": "playerList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "1995:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$6_storage_$2_storage",
                                "typeString": "struct Gobang.Player storage ref[2] storage ref"
                              }
                            },
                            "id": 220,
                            "indexExpression": {
                              "condition": {
                                "expression": {
                                  "id": 215,
                                  "name": "currentPlayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "2006:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$6_storage",
                                    "typeString": "struct Gobang.Player storage ref"
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2020:7:0",
                                "memberName": "isBlack",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5,
                                "src": "2006:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "hexValue": "30",
                                "id": 218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2034:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "2006:29:0",
                              "trueExpression": {
                                "hexValue": "31",
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2030:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1995:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$6_storage",
                              "typeString": "struct Gobang.Player storage ref"
                            }
                          },
                          "src": "1979:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$6_storage",
                            "typeString": "struct Gobang.Player storage ref"
                          }
                        },
                        "id": 222,
                        "nodeType": "ExpressionStatement",
                        "src": "1979:57:0"
                      }
                    ]
                  },
                  "id": 224,
                  "nodeType": "IfStatement",
                  "src": "1827:220:0",
                  "trueBody": {
                    "id": 212,
                    "nodeType": "Block",
                    "src": "1846:115:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 199,
                            "name": "gameOver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "1860:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1871:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1860:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "1860:15:0"
                      },
                      {
                        "expression": {
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 203,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1889:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$6_storage",
                              "typeString": "struct Gobang.Player storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 204,
                            "name": "currentPlayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1898:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$6_storage",
                              "typeString": "struct Gobang.Player storage ref"
                            }
                          },
                          "src": "1889:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Player_$6_storage",
                            "typeString": "struct Gobang.Player storage ref"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "1889:22:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 208,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1939:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1943:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1939:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 207,
                            "name": "GameOver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "1930:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1930:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 211,
                        "nodeType": "EmitStatement",
                        "src": "1925:25:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e802c36f",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "play",
            "nameLocation": "1253:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1264:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1258:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "1273:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1267:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:18:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1283:0:0"
            },
            "scope": 489,
            "src": "1244:809:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "2176:366:0",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 236,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2248:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 237,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2251:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2254:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2257:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 235,
                      "name": "checkLine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "2238:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint8_$_t_uint8_$_t_int8_$_t_int8_$returns$_t_bool_$",
                        "typeString": "function (uint8,uint8,int8,int8) view returns (bool)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2238:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "IfStatement",
                  "src": "2234:38:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2268:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 234,
                    "id": 242,
                    "nodeType": "Return",
                    "src": "2261:11:0"
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 245,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2344:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 246,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2347:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2350:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 244,
                      "name": "checkLine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "2334:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint8_$_t_uint8_$_t_int8_$_t_int8_$returns$_t_bool_$",
                        "typeString": "function (uint8,uint8,int8,int8) view returns (bool)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2334:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 252,
                  "nodeType": "IfStatement",
                  "src": "2330:38:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2364:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 234,
                    "id": 251,
                    "nodeType": "Return",
                    "src": "2357:11:0"
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2440:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 255,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2443:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2446:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2449:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 253,
                      "name": "checkLine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "2430:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint8_$_t_uint8_$_t_int8_$_t_int8_$returns$_t_bool_$",
                        "typeString": "function (uint8,uint8,int8,int8) view returns (bool)"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2430:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 261,
                  "nodeType": "IfStatement",
                  "src": "2426:38:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2460:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 234,
                    "id": 260,
                    "nodeType": "Return",
                    "src": "2453:11:0"
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 263,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2488:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 264,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2491:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "2494:2:0",
                        "subExpression": {
                          "hexValue": "31",
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2495:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_minus_1_by_1",
                          "typeString": "int_const -1"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_minus_1_by_1",
                          "typeString": "int_const -1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 262,
                      "name": "checkLine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "2478:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint8_$_t_uint8_$_t_int8_$_t_int8_$returns$_t_bool_$",
                        "typeString": "function (uint8,uint8,int8,int8) view returns (bool)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2478:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "IfStatement",
                  "src": "2474:39:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2509:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 234,
                    "id": 270,
                    "nodeType": "Return",
                    "src": "2502:11:0"
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2530:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 234,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "2523:12:0"
                }
              ]
            },
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkWin",
            "nameLocation": "2121:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "2136:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "2130:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "2145:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "2139:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2129:18:0"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "2170:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2170:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2169:6:0"
            },
            "scope": 489,
            "src": "2112:430:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "2690:922:0",
              "statements": [
                {
                  "assignments": [
                    289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 289,
                      "mutability": "mutable",
                      "name": "color",
                      "nameLocation": "2706:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "2700:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 288,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2700:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 296,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 290,
                          "name": "chessboard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "2714:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Chessboard_$13_storage",
                            "typeString": "struct Gobang.Chessboard storage ref"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2725:5:0",
                        "memberName": "cells",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "2714:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint8_$15_storage_$15_storage",
                          "typeString": "uint8[15] storage ref[15] storage ref"
                        }
                      },
                      "id": 293,
                      "indexExpression": {
                        "id": 292,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2731:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2714:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$15_storage",
                        "typeString": "uint8[15] storage ref"
                      }
                    },
                    "id": 295,
                    "indexExpression": {
                      "id": 294,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "2734:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2714:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2700:36:0"
                },
                {
                  "assignments": [
                    298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "2752:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "2746:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 297,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2746:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2760:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2746:15:0"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2801:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "2795:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2795:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 312,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 307,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "2816:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2811:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int8_$",
                              "typeString": "type(int8)"
                            },
                            "typeName": {
                              "id": 305,
                              "name": "int8",
                              "nodeType": "ElementaryTypeName",
                              "src": "2811:4:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2811:7:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 309,
                          "name": "dx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "2821:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "src": "2811:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      ],
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2805:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2805:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2795:29:0"
                },
                {
                  "assignments": [
                    314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 314,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "2840:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 475,
                      "src": "2834:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 313,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2834:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 319,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "2855:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2850:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int8_$",
                              "typeString": "type(int8)"
                            },
                            "typeName": {
                              "id": 317,
                              "name": "int8",
                              "nodeType": "ElementaryTypeName",
                              "src": "2850:4:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2850:7:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 321,
                          "name": "dy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "2860:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "src": "2850:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        }
                      ],
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2844:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2844:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2844:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2834:29:0"
                },
                {
                  "body": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "2919:264:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 340,
                                  "name": "chessboard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "2937:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Chessboard_$13_storage",
                                    "typeString": "struct Gobang.Chessboard storage ref"
                                  }
                                },
                                "id": 341,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2948:5:0",
                                "memberName": "cells",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12,
                                "src": "2937:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint8_$15_storage_$15_storage",
                                  "typeString": "uint8[15] storage ref[15] storage ref"
                                }
                              },
                              "id": 343,
                              "indexExpression": {
                                "id": 342,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "2954:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2937:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$15_storage",
                                "typeString": "uint8[15] storage ref"
                              }
                            },
                            "id": 345,
                            "indexExpression": {
                              "id": 344,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "2957:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2937:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 346,
                            "name": "color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "2963:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2937:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 359,
                          "nodeType": "Block",
                          "src": "3061:38:0",
                          "statements": [
                            {
                              "id": 358,
                              "nodeType": "Break",
                              "src": "3079:5:0"
                            }
                          ]
                        },
                        "id": 360,
                        "nodeType": "IfStatement",
                        "src": "2933:166:0",
                        "trueBody": {
                          "id": 357,
                          "nodeType": "Block",
                          "src": "2970:85:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "2988:7:0",
                                "subExpression": {
                                  "id": 348,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "2988:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 350,
                              "nodeType": "ExpressionStatement",
                              "src": "2988:7:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 351,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "3017:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "35",
                                  "id": 352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3026:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "src": "3017:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 356,
                              "nodeType": "IfStatement",
                              "src": "3013:27:0",
                              "trueBody": {
                                "expression": {
                                  "hexValue": "74727565",
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3036:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "functionReturnParameters": 287,
                                "id": 355,
                                "nodeType": "Return",
                                "src": "3029:11:0"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 361,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3112:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 366,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 302,
                                      "src": "3127:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 365,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3122:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int8_$",
                                      "typeString": "type(int8)"
                                    },
                                    "typeName": {
                                      "id": 364,
                                      "name": "int8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3122:4:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3122:7:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 368,
                                  "name": "dx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "3132:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "3122:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3116:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 362,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3116:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3116:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3112:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 372,
                        "nodeType": "ExpressionStatement",
                        "src": "3112:23:0"
                      },
                      {
                        "expression": {
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 373,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "3149:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 378,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 314,
                                      "src": "3164:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3159:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int8_$",
                                      "typeString": "type(int8)"
                                    },
                                    "typeName": {
                                      "id": 376,
                                      "name": "int8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3159:4:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3159:7:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 380,
                                  "name": "dy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 283,
                                  "src": "3169:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "3159:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3153:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 374,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3153:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3153:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3149:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "3149:23:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 325,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "2880:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2885:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2880:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 328,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "2890:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3135",
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2894:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          "src": "2890:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2880:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 332,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "2900:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2905:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2900:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2880:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 336,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "2910:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3135",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2914:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      },
                      "src": "2910:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2880:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 386,
                  "nodeType": "ForStatement",
                  "src": "2873:310:0"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 387,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "3216:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 392,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "3231:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3226:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int8_$",
                                "typeString": "type(int8)"
                              },
                              "typeName": {
                                "id": 390,
                                "name": "int8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3226:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3226:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 394,
                            "name": "dx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "3236:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          },
                          "src": "3226:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        ],
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3220:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 388,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3220:5:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3220:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3216:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "3216:23:0"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 399,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "3249:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 404,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 279,
                                "src": "3264:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3259:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int8_$",
                                "typeString": "type(int8)"
                              },
                              "typeName": {
                                "id": 402,
                                "name": "int8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3259:4:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3259:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 406,
                            "name": "dy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "3269:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int8",
                              "typeString": "int8"
                            }
                          },
                          "src": "3259:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        ],
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3253:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3253:5:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3253:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3249:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "3249:23:0"
                },
                {
                  "body": {
                    "id": 471,
                    "nodeType": "Block",
                    "src": "3328:256:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 426,
                                  "name": "chessboard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "3346:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Chessboard_$13_storage",
                                    "typeString": "struct Gobang.Chessboard storage ref"
                                  }
                                },
                                "id": 427,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3357:5:0",
                                "memberName": "cells",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12,
                                "src": "3346:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint8_$15_storage_$15_storage",
                                  "typeString": "uint8[15] storage ref[15] storage ref"
                                }
                              },
                              "id": 429,
                              "indexExpression": {
                                "id": 428,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "3363:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3346:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$15_storage",
                                "typeString": "uint8[15] storage ref"
                              }
                            },
                            "id": 431,
                            "indexExpression": {
                              "id": 430,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3366:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3346:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 432,
                            "name": "color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "3372:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3346:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 445,
                          "nodeType": "Block",
                          "src": "3470:38:0",
                          "statements": [
                            {
                              "id": 444,
                              "nodeType": "Break",
                              "src": "3488:5:0"
                            }
                          ]
                        },
                        "id": 446,
                        "nodeType": "IfStatement",
                        "src": "3342:166:0",
                        "trueBody": {
                          "id": 443,
                          "nodeType": "Block",
                          "src": "3379:85:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3397:7:0",
                                "subExpression": {
                                  "id": 434,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "3397:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 436,
                              "nodeType": "ExpressionStatement",
                              "src": "3397:7:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 437,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "3426:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "35",
                                  "id": 438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3435:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "src": "3426:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 442,
                              "nodeType": "IfStatement",
                              "src": "3422:27:0",
                              "trueBody": {
                                "expression": {
                                  "hexValue": "74727565",
                                  "id": 440,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3445:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "functionReturnParameters": 287,
                                "id": 441,
                                "nodeType": "Return",
                                "src": "3438:11:0"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 447,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3517:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 452,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 302,
                                      "src": "3532:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3527:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int8_$",
                                      "typeString": "type(int8)"
                                    },
                                    "typeName": {
                                      "id": 450,
                                      "name": "int8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3527:4:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3527:7:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 454,
                                  "name": "dx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "3537:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "3527:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3521:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 448,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3521:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3521:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3517:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 458,
                        "nodeType": "ExpressionStatement",
                        "src": "3517:23:0"
                      },
                      {
                        "expression": {
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 459,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "3550:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                },
                                "id": 467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 464,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 314,
                                      "src": "3565:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3560:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int8_$",
                                      "typeString": "type(int8)"
                                    },
                                    "typeName": {
                                      "id": 462,
                                      "name": "int8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3560:4:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 465,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3560:7:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 466,
                                  "name": "dy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 283,
                                  "src": "3570:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int8",
                                    "typeString": "int8"
                                  }
                                },
                                "src": "3560:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int8",
                                  "typeString": "int8"
                                }
                              ],
                              "id": 461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3554:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 460,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3554:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3554:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3550:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 470,
                        "nodeType": "ExpressionStatement",
                        "src": "3550:23:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 411,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3289:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3294:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3289:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 414,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3299:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3135",
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3303:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          "src": "3299:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3289:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 418,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "3309:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3314:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3309:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3289:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 422,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "3319:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3135",
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3323:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      },
                      "src": "3319:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3289:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 472,
                  "nodeType": "ForStatement",
                  "src": "3282:302:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3600:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 287,
                  "id": 474,
                  "nodeType": "Return",
                  "src": "3593:12:0"
                }
              ]
            },
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkLine",
            "nameLocation": "2616:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "2632:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "2626:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "2641:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "2635:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2635:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "dx",
                  "nameLocation": "2649:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "2644:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2644:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "dy",
                  "nameLocation": "2658:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "2653:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int8",
                    "typeString": "int8"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "int8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int8",
                      "typeString": "int8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2625:36:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "2684:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2683:6:0"
            },
            "scope": 489,
            "src": "2607:1005:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "f556ad7790e70877edcf3b3bb441255def8a405faa0dfdb005a02fa8e557bca9",
            "id": 480,
            "name": "GameOver",
            "nameLocation": "3624:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "3641:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "3633:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3633:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3632:16:0"
            },
            "src": "3618:31:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d9967ef09da59323a99e7255af5417f707454deb2d106cfa72b65525f86394c4",
            "id": 488,
            "name": "ChessSet",
            "nameLocation": "3661:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3676:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "3670:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3670:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 484,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "3685:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "3679:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3679:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 486,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "3696:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "3688:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3688:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3669:34:0"
            },
            "src": "3655:49:0"
          }
        ],
        "scope": 490,
        "src": "25:3681:0",
        "usedErrors": []
      }
    ],
    "src": "0:3706:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50610a9d806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bdb337d11161005b578063bdb337d1146100ed578063dfbf53ae1461010a578063e802c36f14610129578063f686af771461013c57600080fd5b80633ccfe887146100825780634404a43814610097578063ae6d9073146100da575b600080fd5b610095610090366004610931565b610171565b005b6012546100b6906001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152015b60405180910390f35b6100b66100e8366004610964565b610343565b6014546100fa9060ff1681565b60405190151581526020016100d1565b6013546100b6906001600160a01b03811690600160a01b900460ff1682565b61009561013736600461098e565b61036e565b6100b661014a3660046109b8565b6000602081905290815260409020546001600160a01b03811690600160a01b900460ff1682565b6040805180820182526001600160a01b038481168083526001602080850182815260009384528382528684209551865491519086166001600160a81b031992831617600160a01b91151582021787558751808901895289871680825281850187815290875293869052978520975188549351908716938316939093179215158102929092178755855483546001600160a01b03198082169288169283178655975460ff908590048116151585029184169092171790935586546002805491909616968116871786559654961690941794849004161515909202929092179091555b600f8160ff1610156102e05760005b600f8160ff1610156102cd576000600360ff8416600f8110610285576102856109da565b018260ff16600f811061029a5761029a6109da565b602091828204019190066101000a81548160ff021916908360ff16021790555080806102c590610a06565b915050610261565b50806102d881610a06565b915050610252565b50503360009081526020819052604090208054601280546001600160a01b039092166001600160a01b031983168117825592546001600160a81b0319909216909217600160a01b9182900460ff161515909102179055506014805460ff19169055565b6001816002811061035357600080fd5b01546001600160a01b0381169150600160a01b900460ff1682565b60145460ff16156103b25760405162461bcd60e51b815260206004820152600960248201526823b0b6b29037bb32b960b91b60448201526064015b60405180910390fd5b6012546001600160a01b031633146103fc5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103cb7bab9103a3ab93760991b60448201526064016103a9565b600f8260ff1610801561040d575060015b801561041c5750600f8160ff16105b61045b5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103837b9b4ba34b7b760811b60448201526064016103a9565b600360ff8316600f8110610471576104716109da565b018160ff16600f8110610486576104866109da565b602081049091015460ff601f9092166101000a900416156104dd5760405162461bcd60e51b8152602060048201526011602482015270141bdcda5d1a5bdb881bd8d8dd5c1a5959607a1b60448201526064016103a9565b601254600160a01b900460ff166104f55760026104f8565b60015b600360ff8416600f811061050e5761050e6109da565b018260ff16600f8110610523576105236109da565b6020808204909201805460ff948516601f9093166101000a92830292850219169190911790556040805185841681529284169183019190915233908201527fd9967ef09da59323a99e7255af5417f707454deb2d106cfa72b65525f86394c49060600160405180910390a16105988282610692565b15610617576014805460ff1916600117905560125460138054600160a01b80840460ff161515026001600160a81b03199091166001600160a01b03909316929092179190911790556040513381527ff556ad7790e70877edcf3b3bb441255def8a405faa0dfdb005a02fa8e557bca99060200160405180910390a15050565b601254600190600160a01b900460ff16610632576000610635565b60015b60ff1660028110610648576106486109da565b018054601280546001600160a01b039092166001600160a01b031983168117825592546001600160a81b0319909216909217600160a01b9182900460ff1615159091021790555050565b60006106a283836001600061070a565b156106af57506001610704565b6106bd83836000600161070a565b156106ca57506001610704565b6106d7838360018061070a565b156106e457506001610704565b6106f38383600019600161070a565b1561070057506001610704565b5060005b92915050565b600080600360ff8716600f8110610723576107236109da565b018560ff16600f8110610738576107386109da565b602081049091015460ff601f9092166101000a90041690506001600061075e8689610a25565b9050600061076c8689610a25565b90505b600f8260ff16108015610780575060015b801561078f5750600f8160ff16105b1561082d578360ff1660036000018360ff16600f81106107b1576107b16109da565b018260ff16600f81106107c6576107c66109da565b602081049091015460ff601f9092166101000a9004160361080b57826107eb81610a06565b9350508260ff1660050361080657600194505050505061090d565b610810565b61082d565b61081a8783610a25565b91506108268682610a25565b905061076f565b610837878a610a46565b91506108438689610a46565b90505b600f8260ff16108015610857575060015b80156108665750600f8160ff16105b15610904578360ff1660036000018360ff16600f8110610888576108886109da565b018260ff16600f811061089d5761089d6109da565b602081049091015460ff601f9092166101000a900416036108e257826108c281610a06565b9350508260ff166005036108dd57600194505050505061090d565b6108e7565b610904565b6108f18783610a46565b91506108fd8682610a46565b9050610846565b60009450505050505b949350505050565b80356001600160a01b038116811461092c57600080fd5b919050565b6000806040838503121561094457600080fd5b61094d83610915565b915061095b60208401610915565b90509250929050565b60006020828403121561097657600080fd5b5035919050565b803560ff8116811461092c57600080fd5b600080604083850312156109a157600080fd5b6109aa8361097d565b915061095b6020840161097d565b6000602082840312156109ca57600080fd5b6109d382610915565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610a1c57610a1c6109f0565b60010192915050565b600081810b9083900b01607f8113607f1982121715610704576107046109f0565b600082810b9082900b03607f198112607f82131715610704576107046109f056fea26469706673582212205a292b1bc3097a911bebf8dd3bce70e35992eaf622d26296ac4cf24de9b37cf664736f6c63430008110033",
  "bytecodeSha1": "72298a26100bfca15de073efa09d9d395431581f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Gobang",
  "coverageMap": {
    "branches": {
      "0": {
        "Gobang.checkLine": {
          "50": [
            2937,
            2968,
            false
          ],
          "51": [
            3017,
            3027,
            false
          ],
          "52": [
            3346,
            3377,
            false
          ],
          "53": [
            3426,
            3436,
            false
          ]
        },
        "Gobang.checkWin": {
          "46": [
            2238,
            2259,
            false
          ],
          "47": [
            2334,
            2355,
            false
          ],
          "48": [
            2430,
            2451,
            false
          ],
          "49": [
            2478,
            2500,
            false
          ]
        },
        "Gobang.play": {
          "37": [
            1340,
            1349,
            true
          ],
          "38": [
            1417,
            1449,
            true
          ],
          "39": [
            1537,
            1543,
            false
          ],
          "40": [
            1547,
            1553,
            false
          ],
          "41": [
            1557,
            1563,
            true
          ],
          "42": [
            1644,
            1671,
            true
          ],
          "43": [
            1747,
            1768,
            true
          ],
          "44": [
            1831,
            1844,
            false
          ],
          "45": [
            2006,
            2027,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Gobang.checkLine": {
          "24": [
            2988,
            2995
          ],
          "25": [
            3029,
            3040
          ],
          "26": [
            3079,
            3084
          ],
          "27": [
            3112,
            3135
          ],
          "28": [
            3149,
            3172
          ],
          "29": [
            3216,
            3239
          ],
          "30": [
            3249,
            3272
          ],
          "31": [
            3397,
            3404
          ],
          "32": [
            3438,
            3449
          ],
          "33": [
            3488,
            3493
          ],
          "34": [
            3517,
            3540
          ],
          "35": [
            3550,
            3573
          ],
          "36": [
            3593,
            3605
          ]
        },
        "Gobang.checkWin": {
          "19": [
            2261,
            2272
          ],
          "20": [
            2357,
            2368
          ],
          "21": [
            2453,
            2464
          ],
          "22": [
            2502,
            2513
          ],
          "23": [
            2523,
            2535
          ]
        },
        "Gobang.play": {
          "9": [
            1332,
            1363
          ],
          "10": [
            1409,
            1467
          ],
          "11": [
            1519,
            1584
          ],
          "12": [
            1636,
            1694
          ],
          "13": [
            1722,
            1776
          ],
          "14": [
            1786,
            1817
          ],
          "15": [
            1860,
            1875
          ],
          "16": [
            1889,
            1911
          ],
          "17": [
            1925,
            1950
          ],
          "18": [
            1979,
            2036
          ]
        },
        "Gobang.start": {
          "0": [
            630,
            678
          ],
          "1": [
            688,
            737
          ],
          "2": [
            748,
            787
          ],
          "3": [
            797,
            836
          ],
          "4": [
            974,
            1000
          ],
          "5": [
            951,
            954
          ],
          "6": [
            906,
            909
          ],
          "7": [
            1068,
            1109
          ],
          "8": [
            1159,
            1175
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bdb337d11161005b578063bdb337d1146100ed578063dfbf53ae1461010a578063e802c36f14610129578063f686af771461013c57600080fd5b80633ccfe887146100825780634404a43814610097578063ae6d9073146100da575b600080fd5b610095610090366004610931565b610171565b005b6012546100b6906001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152015b60405180910390f35b6100b66100e8366004610964565b610343565b6014546100fa9060ff1681565b60405190151581526020016100d1565b6013546100b6906001600160a01b03811690600160a01b900460ff1682565b61009561013736600461098e565b61036e565b6100b661014a3660046109b8565b6000602081905290815260409020546001600160a01b03811690600160a01b900460ff1682565b6040805180820182526001600160a01b038481168083526001602080850182815260009384528382528684209551865491519086166001600160a81b031992831617600160a01b91151582021787558751808901895289871680825281850187815290875293869052978520975188549351908716938316939093179215158102929092178755855483546001600160a01b03198082169288169283178655975460ff908590048116151585029184169092171790935586546002805491909616968116871786559654961690941794849004161515909202929092179091555b600f8160ff1610156102e05760005b600f8160ff1610156102cd576000600360ff8416600f8110610285576102856109da565b018260ff16600f811061029a5761029a6109da565b602091828204019190066101000a81548160ff021916908360ff16021790555080806102c590610a06565b915050610261565b50806102d881610a06565b915050610252565b50503360009081526020819052604090208054601280546001600160a01b039092166001600160a01b031983168117825592546001600160a81b0319909216909217600160a01b9182900460ff161515909102179055506014805460ff19169055565b6001816002811061035357600080fd5b01546001600160a01b0381169150600160a01b900460ff1682565b60145460ff16156103b25760405162461bcd60e51b815260206004820152600960248201526823b0b6b29037bb32b960b91b60448201526064015b60405180910390fd5b6012546001600160a01b031633146103fc5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103cb7bab9103a3ab93760991b60448201526064016103a9565b600f8260ff1610801561040d575060015b801561041c5750600f8160ff16105b61045b5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103837b9b4ba34b7b760811b60448201526064016103a9565b600360ff8316600f8110610471576104716109da565b018160ff16600f8110610486576104866109da565b602081049091015460ff601f9092166101000a900416156104dd5760405162461bcd60e51b8152602060048201526011602482015270141bdcda5d1a5bdb881bd8d8dd5c1a5959607a1b60448201526064016103a9565b601254600160a01b900460ff166104f55760026104f8565b60015b600360ff8416600f811061050e5761050e6109da565b018260ff16600f8110610523576105236109da565b6020808204909201805460ff948516601f9093166101000a92830292850219169190911790556040805185841681529284169183019190915233908201527fd9967ef09da59323a99e7255af5417f707454deb2d106cfa72b65525f86394c49060600160405180910390a16105988282610692565b15610617576014805460ff1916600117905560125460138054600160a01b80840460ff161515026001600160a81b03199091166001600160a01b03909316929092179190911790556040513381527ff556ad7790e70877edcf3b3bb441255def8a405faa0dfdb005a02fa8e557bca99060200160405180910390a15050565b601254600190600160a01b900460ff16610632576000610635565b60015b60ff1660028110610648576106486109da565b018054601280546001600160a01b039092166001600160a01b031983168117825592546001600160a81b0319909216909217600160a01b9182900460ff1615159091021790555050565b60006106a283836001600061070a565b156106af57506001610704565b6106bd83836000600161070a565b156106ca57506001610704565b6106d7838360018061070a565b156106e457506001610704565b6106f38383600019600161070a565b1561070057506001610704565b5060005b92915050565b600080600360ff8716600f8110610723576107236109da565b018560ff16600f8110610738576107386109da565b602081049091015460ff601f9092166101000a90041690506001600061075e8689610a25565b9050600061076c8689610a25565b90505b600f8260ff16108015610780575060015b801561078f5750600f8160ff16105b1561082d578360ff1660036000018360ff16600f81106107b1576107b16109da565b018260ff16600f81106107c6576107c66109da565b602081049091015460ff601f9092166101000a9004160361080b57826107eb81610a06565b9350508260ff1660050361080657600194505050505061090d565b610810565b61082d565b61081a8783610a25565b91506108268682610a25565b905061076f565b610837878a610a46565b91506108438689610a46565b90505b600f8260ff16108015610857575060015b80156108665750600f8160ff16105b15610904578360ff1660036000018360ff16600f8110610888576108886109da565b018260ff16600f811061089d5761089d6109da565b602081049091015460ff601f9092166101000a900416036108e257826108c281610a06565b9350508260ff166005036108dd57600194505050505061090d565b6108e7565b610904565b6108f18783610a46565b91506108fd8682610a46565b9050610846565b60009450505050505b949350505050565b80356001600160a01b038116811461092c57600080fd5b919050565b6000806040838503121561094457600080fd5b61094d83610915565b915061095b60208401610915565b90509250929050565b60006020828403121561097657600080fd5b5035919050565b803560ff8116811461092c57600080fd5b600080604083850312156109a157600080fd5b6109aa8361097d565b915061095b6020840161097d565b6000602082840312156109ca57600080fd5b6109d382610915565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610a1c57610a1c6109f0565b60010192915050565b600081810b9083900b01607f8113607f1982121715610704576107046109f0565b600082810b9082900b03607f198112607f82131715610704576107046109f056fea26469706673582212205a292b1bc3097a911bebf8dd3bce70e35992eaf622d26296ac4cf24de9b37cf664736f6c63430008110033",
  "deployedSourceMap": "25:3681:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:653;;;;;;:::i;:::-;;:::i;:::-;;409:27;;;;;-1:-1:-1;;;;;409:27:0;;;-1:-1:-1;;;409:27:0;;;;;;;;;;-1:-1:-1;;;;;643:32:1;;;625:51;;719:14;;712:22;707:2;692:18;;685:50;598:18;409:27:0;;;;;;;;295;;;;;;:::i;:::-;;:::i;502:20::-;;;;;;;;;;;;1096:14:1;;1089:22;1071:41;;1059:2;1044:18;502:20:0;931:187:1;443:20:0;;;;;-1:-1:-1;;;;;443:20:0;;;-1:-1:-1;;;443:20:0;;;;;;1244:809;;;;;;:::i;:::-;;:::i;242:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;242:47:0;;;-1:-1:-1;;;242:47:0;;;;;;529:653;656:22;;;;;;;;-1:-1:-1;;;;;656:22:0;;;;;;673:4;656:22;;;;;;;-1:-1:-1;630:23:0;;;;;;;;;:48;;;;;;;;;-1:-1:-1;;;;;;630:48:0;;;;-1:-1:-1;;;630:48:0;;;;;;;;714:23;;;;;;;;;;;;;;;;;;;688;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;748:39;;;;-1:-1:-1;;;;;;748:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;797;;:13;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;880:145;902:2;898:1;:6;;;880:145;;;930:7;925:90;947:2;943:1;:6;;;925:90;;;999:1;974:10;:19;;;;;;;;;;:::i;:::-;;994:1;974:22;;;;;;;;;:::i;:::-;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;951:3;;;;;:::i;:::-;;;;925:90;;;-1:-1:-1;906:3:0;;;;:::i;:::-;;;;880:145;;;-1:-1:-1;;1098:10:0;1084:13;:25;;;;;;;;;;1068:41;;:13;:41;;-1:-1:-1;;;;;1068:41:0;;;-1:-1:-1;;;;;;1068:41:0;;;;;;;;-1:-1:-1;;;;;;1068:41:0;;;;;;-1:-1:-1;;;1068:41:0;;;;;;;;;;;;;;-1:-1:-1;1068:41:0;1159:16;;-1:-1:-1;;1159:16:0;;;529:653::o;295:27::-;;;;;;;;;;;;;;-1:-1:-1;;;;;295:27:0;;;-1:-1:-1;;;;295:27:0;;;;;:::o;1244:809::-;1341:8;;;;1340:9;1332:31;;;;-1:-1:-1;;;1332:31:0;;2378:2:1;1332:31:0;;;2360:21:1;2417:1;2397:18;;;2390:29;-1:-1:-1;;;2435:18:1;;;2428:39;2484:18;;1332:31:0;;;;;;;;;1431:13;:18;-1:-1:-1;;;;;1431:18:0;1417:10;:32;1409:58;;;;-1:-1:-1;;;1409:58:0;;2715:2:1;1409:58:0;;;2697:21:1;2754:2;2734:18;;;2727:30;-1:-1:-1;;;2773:18:1;;;2766:43;2826:18;;1409:58:0;2513:337:1;1409:58:0;1541:2;1537:1;:6;;;1527:26;;;;-1:-1:-1;1547:6:0;1527:26;:36;;;;;1561:2;1557:1;:6;;;1527:36;1519:65;;;;-1:-1:-1;;;1519:65:0;;3057:2:1;1519:65:0;;;3039:21:1;3096:2;3076:18;;;3069:30;-1:-1:-1;;;3115:18:1;;;3108:46;3171:18;;1519:65:0;2855:340:1;1519:65:0;1644:10;:19;;;;;;;;;;:::i;:::-;;1664:1;1644:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:27;1636:58;;;;-1:-1:-1;;;1636:58:0;;3402:2:1;1636:58:0;;;3384:21:1;3441:2;3421:18;;;3414:30;-1:-1:-1;;;3460:18:1;;;3453:47;3517:18;;1636:58:0;3200:341:1;1636:58:0;1747:13;:21;-1:-1:-1;;;1747:21:0;;;;:29;;1775:1;1747:29;;;1771:1;1747:29;1722:10;:19;;;;;;;;;;:::i;:::-;;1742:1;1722:22;;;;;;;;;:::i;:::-;;;;;;;;:54;;;;;;:22;;;;:54;;;;;;;;;;;;;;;;1791:26;;;3758:17:1;;;3740:36;;3812:17;;;3792:18;;;3785:45;;;;1806:10:0;3846:18:1;;;3839:60;1791:26:0;;3728:2:1;3713:18;1791:26:0;;;;;;;1831:13;1840:1;1842;1831:8;:13::i;:::-;1827:220;;;1860:8;:15;;-1:-1:-1;;1860:15:0;1871:4;1860:15;;;1898:13;1889:22;:6;:22;;-1:-1:-1;;;1889:22:0;;;1860:15;1889:22;;;;-1:-1:-1;;;;;;1889:22:0;;;-1:-1:-1;;;;;1889:22:0;;;;;;;;;;;;;1930:20;;1939:10;4056:51:1;;1930:20:0;;4044:2:1;4029:18;1930:20:0;;;;;;;1244:809;;:::o;1827:220::-;2006:13;:21;1995:10;;-1:-1:-1;;;2006:21:0;;;;:29;;2034:1;2006:29;;;2030:1;2006:29;1995:41;;;;;;;;;:::i;:::-;;1979:57;;:13;:57;;-1:-1:-1;;;;;1979:57:0;;;-1:-1:-1;;;;;;1979:57:0;;;;;;;;-1:-1:-1;;;;;;1979:57:0;;;;;;-1:-1:-1;;;1979:57:0;;;;;;;;;;;;;;-1:-1:-1;;1244:809:0:o;2112:430::-;2170:4;2238:21;2248:1;2251;2254;2257;2238:9;:21::i;:::-;2234:38;;;-1:-1:-1;2268:4:0;2261:11;;2234:38;2334:21;2344:1;2347;2350;2353;2334:9;:21::i;:::-;2330:38;;;-1:-1:-1;2364:4:0;2357:11;;2330:38;2430:21;2440:1;2443;2446;2449;2430:9;:21::i;:::-;2426:38;;;-1:-1:-1;2460:4:0;2453:11;;2426:38;2478:22;2488:1;2491;-1:-1:-1;;2498:1:0;2478:9;:22::i;:::-;2474:39;;;-1:-1:-1;2509:4:0;2502:11;;2474:39;-1:-1:-1;2530:5:0;2112:430;;;;;:::o;2607:1005::-;2684:4;;2714:10;:19;;;;;;;;;;:::i;:::-;;2734:1;2714:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;2760:1:0;2746:11;2811:12;2821:2;2816:1;2811:12;:::i;:::-;2795:29;-1:-1:-1;2834:7:0;2850:12;2860:2;2855:1;2850:12;:::i;:::-;2834:29;;2873:310;2894:2;2890:1;:6;;;2880:26;;;;-1:-1:-1;2900:6:0;2880:26;:36;;;;;2914:2;2910:1;:6;;;2880:36;2873:310;;;2963:5;2937:31;;:10;:16;;2954:1;2937:19;;;;;;;;;:::i;:::-;;2957:1;2937:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:31;2933:166;;2988:7;;;;:::i;:::-;;;;3017:5;:10;;3026:1;3017:10;3013:27;;3036:4;3029:11;;;;;;;;3013:27;2933:166;;;3079:5;;2933:166;3122:12;3132:2;3127:1;3122:12;:::i;:::-;3112:23;-1:-1:-1;3159:12:0;3169:2;3164:1;3159:12;:::i;:::-;3149:23;;2873:310;;;3226:12;3236:2;3231:1;3226:12;:::i;:::-;3216:23;-1:-1:-1;3259:12:0;3269:2;3264:1;3259:12;:::i;:::-;3249:23;;3282:302;3303:2;3299:1;:6;;;3289:26;;;;-1:-1:-1;3309:6:0;3289:26;:36;;;;;3323:2;3319:1;:6;;;3289:36;3282:302;;;3372:5;3346:31;;:10;:16;;3363:1;3346:19;;;;;;;;;:::i;:::-;;3366:1;3346:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:31;3342:166;;3397:7;;;;:::i;:::-;;;;3426:5;:10;;3435:1;3426:10;3422:27;;3445:4;3438:11;;;;;;;;3422:27;3342:166;;;3488:5;;3342:166;3527:12;3537:2;3532:1;3527:12;:::i;:::-;3517:23;-1:-1:-1;3560:12:0;3570:2;3565:1;3560:12;:::i;:::-;3550:23;;3282:302;;;3600:5;3593:12;;;;;;2607:1005;;;;;;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;746:180::-;805:6;858:2;846:9;837:7;833:23;829:32;826:52;;;874:1;871;864:12;826:52;-1:-1:-1;897:23:1;;746:180;-1:-1:-1;746:180:1:o;1123:156::-;1189:20;;1249:4;1238:16;;1228:27;;1218:55;;1269:1;1266;1259:12;1284:252;1348:6;1356;1409:2;1397:9;1388:7;1384:23;1380:32;1377:52;;;1425:1;1422;1415:12;1377:52;1448:27;1465:9;1448:27;:::i;:::-;1438:37;;1494:36;1526:2;1515:9;1511:18;1494:36;:::i;1541:186::-;1600:6;1653:2;1641:9;1632:7;1628:23;1624:32;1621:52;;;1669:1;1666;1659:12;1621:52;1692:29;1711:9;1692:29;:::i;:::-;1682:39;1541:186;-1:-1:-1;;;1541:186:1:o;1732:127::-;1793:10;1788:3;1784:20;1781:1;1774:31;1824:4;1821:1;1814:15;1848:4;1845:1;1838:15;1864:127;1925:10;1920:3;1916:20;1913:1;1906:31;1956:4;1953:1;1946:15;1980:4;1977:1;1970:15;1996:175;2033:3;2077:4;2070:5;2066:16;2106:4;2097:7;2094:17;2091:43;;2114:18;;:::i;:::-;2163:1;2150:15;;1996:175;-1:-1:-1;;1996:175:1:o;4118:180::-;4155:3;4184:16;;;4202;;;;4180:39;4263:3;4234:14;;-1:-1:-1;;4250:18:1;;4231:38;4228:64;;;4272:18;;:::i;4303:184::-;4340:4;4389:16;;;4371;;;;4367:39;-1:-1:-1;;4421:19:1;;4452:4;4442:15;;4418:40;4415:66;;;4461:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    3706
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBDB337D1 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBDB337D1 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xE802C36F EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xF686AF77 EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFE887 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4404A438 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xAE6D9073 EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x931 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0xB6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0xFA SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0xB6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x98E JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE DUP4 DUP3 MSTORE DUP7 DUP5 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP2 MLOAD SWAP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP3 DUP4 AND OR PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 ISZERO ISZERO DUP3 MUL OR DUP8 SSTORE DUP8 MLOAD DUP1 DUP10 ADD DUP10 MSTORE DUP10 DUP8 AND DUP1 DUP3 MSTORE DUP2 DUP6 ADD DUP8 DUP2 MSTORE SWAP1 DUP8 MSTORE SWAP4 DUP7 SWAP1 MSTORE SWAP8 DUP6 KECCAK256 SWAP8 MLOAD DUP9 SLOAD SWAP4 MLOAD SWAP1 DUP8 AND SWAP4 DUP4 AND SWAP4 SWAP1 SWAP4 OR SWAP3 ISZERO ISZERO DUP2 MUL SWAP3 SWAP1 SWAP3 OR DUP8 SSTORE DUP6 SLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND SWAP3 DUP9 AND SWAP3 DUP4 OR DUP7 SSTORE SWAP8 SLOAD PUSH1 0xFF SWAP1 DUP6 SWAP1 DIV DUP2 AND ISZERO ISZERO DUP6 MUL SWAP2 DUP5 AND SWAP1 SWAP3 OR OR SWAP1 SWAP4 SSTORE DUP7 SLOAD PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP7 AND SWAP7 DUP2 AND DUP8 OR DUP7 SSTORE SWAP7 SLOAD SWAP7 AND SWAP1 SWAP5 OR SWAP5 DUP5 SWAP1 DIV AND ISZERO ISZERO SWAP1 SWAP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE JUMPDEST PUSH1 0xF DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xF DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0xFF DUP5 AND PUSH1 0xF DUP2 LT PUSH2 0x285 JUMPI PUSH2 0x285 PUSH2 0x9DA JUMP JUMPDEST ADD DUP3 PUSH1 0xFF AND PUSH1 0xF DUP2 LT PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x2C5 SWAP1 PUSH2 0xA06 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x261 JUMP JUMPDEST POP DUP1 PUSH2 0x2D8 DUP2 PUSH2 0xA06 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x252 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE SWAP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE POP PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x23B0B6B29037BB32B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103CB7BAB9103A3AB937 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0xF DUP3 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x40D JUMPI POP PUSH1 0x1 JUMPDEST DUP1 ISZERO PUSH2 0x41C JUMPI POP PUSH1 0xF DUP2 PUSH1 0xFF AND LT JUMPDEST PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B2103837B9B4BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0xFF DUP4 AND PUSH1 0xF DUP2 LT PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0x9DA JUMP JUMPDEST ADD DUP2 PUSH1 0xFF AND PUSH1 0xF DUP2 LT PUSH2 0x486 JUMPI PUSH2 0x486 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x141BDCDA5D1A5BDB881BD8D8DD5C1A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4F5 JUMPI PUSH1 0x2 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x3 PUSH1 0xFF DUP5 AND PUSH1 0xF DUP2 LT PUSH2 0x50E JUMPI PUSH2 0x50E PUSH2 0x9DA JUMP JUMPDEST ADD DUP3 PUSH1 0xFF AND PUSH1 0xF DUP2 LT PUSH2 0x523 JUMPI PUSH2 0x523 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 DIV SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP5 DUP6 AND PUSH1 0x1F SWAP1 SWAP4 AND PUSH2 0x100 EXP SWAP3 DUP4 MUL SWAP3 DUP6 MUL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP5 AND DUP2 MSTORE SWAP3 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 DUP3 ADD MSTORE PUSH32 0xD9967EF09DA59323A99E7255AF5417F707454DEB2D106CFA72B65525F86394C4 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x598 DUP3 DUP3 PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x617 JUMPI PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL DUP1 DUP5 DIV PUSH1 0xFF AND ISZERO ISZERO MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0xF556AD7790E70877EDCF3B3BB441255DEF8A405FAA0DFDB005A02FA8E557BCA9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x632 JUMPI PUSH1 0x0 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 LT PUSH2 0x648 JUMPI PUSH2 0x648 PUSH2 0x9DA JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE SWAP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A2 DUP4 DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x70A JUMP JUMPDEST ISZERO PUSH2 0x6AF JUMPI POP PUSH1 0x1 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x6BD DUP4 DUP4 PUSH1 0x0 PUSH1 0x1 PUSH2 0x70A JUMP JUMPDEST ISZERO PUSH2 0x6CA JUMPI POP PUSH1 0x1 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x6D7 DUP4 DUP4 PUSH1 0x1 DUP1 PUSH2 0x70A JUMP JUMPDEST ISZERO PUSH2 0x6E4 JUMPI POP PUSH1 0x1 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x6F3 DUP4 DUP4 PUSH1 0x0 NOT PUSH1 0x1 PUSH2 0x70A JUMP JUMPDEST ISZERO PUSH2 0x700 JUMPI POP PUSH1 0x1 PUSH2 0x704 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0xFF DUP8 AND PUSH1 0xF DUP2 LT PUSH2 0x723 JUMPI PUSH2 0x723 PUSH2 0x9DA JUMP JUMPDEST ADD DUP6 PUSH1 0xFF AND PUSH1 0xF DUP2 LT PUSH2 0x738 JUMPI PUSH2 0x738 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP1 POP PUSH1 0x1 PUSH1 0x0 PUSH2 0x75E DUP7 DUP10 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x76C DUP7 DUP10 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF DUP3 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x780 JUMPI POP PUSH1 0x1 JUMPDEST DUP1 ISZERO PUSH2 0x78F JUMPI POP PUSH1 0xF DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0x82D JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x3 PUSH1 0x0 ADD DUP4 PUSH1 0xFF AND PUSH1 0xF DUP2 LT PUSH2 0x7B1 JUMPI PUSH2 0x7B1 PUSH2 0x9DA JUMP JUMPDEST ADD DUP3 PUSH1 0xFF AND PUSH1 0xF DUP2 LT PUSH2 0x7C6 JUMPI PUSH2 0x7C6 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SUB PUSH2 0x80B JUMPI DUP3 PUSH2 0x7EB DUP2 PUSH2 0xA06 JUMP JUMPDEST SWAP4 POP POP DUP3 PUSH1 0xFF AND PUSH1 0x5 SUB PUSH2 0x806 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x90D JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST PUSH2 0x81A DUP8 DUP4 PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP PUSH2 0x826 DUP7 DUP3 PUSH2 0xA25 JUMP JUMPDEST SWAP1 POP PUSH2 0x76F JUMP JUMPDEST PUSH2 0x837 DUP8 DUP11 PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP PUSH2 0x843 DUP7 DUP10 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF DUP3 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x857 JUMPI POP PUSH1 0x1 JUMPDEST DUP1 ISZERO PUSH2 0x866 JUMPI POP PUSH1 0xF DUP2 PUSH1 0xFF AND LT JUMPDEST ISZERO PUSH2 0x904 JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x3 PUSH1 0x0 ADD DUP4 PUSH1 0xFF AND PUSH1 0xF DUP2 LT PUSH2 0x888 JUMPI PUSH2 0x888 PUSH2 0x9DA JUMP JUMPDEST ADD DUP3 PUSH1 0xFF AND PUSH1 0xF DUP2 LT PUSH2 0x89D JUMPI PUSH2 0x89D PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SUB PUSH2 0x8E2 JUMPI DUP3 PUSH2 0x8C2 DUP2 PUSH2 0xA06 JUMP JUMPDEST SWAP4 POP POP DUP3 PUSH1 0xFF AND PUSH1 0x5 SUB PUSH2 0x8DD JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x90D JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST PUSH2 0x8F1 DUP8 DUP4 PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP PUSH2 0x8FD DUP7 DUP3 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP PUSH2 0x846 JUMP JUMPDEST PUSH1 0x0 SWAP5 POP POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94D DUP4 PUSH2 0x915 JUMP JUMPDEST SWAP2 POP PUSH2 0x95B PUSH1 0x20 DUP5 ADD PUSH2 0x915 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AA DUP4 PUSH2 0x97D JUMP JUMPDEST SWAP2 POP PUSH2 0x95B PUSH1 0x20 DUP5 ADD PUSH2 0x97D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D3 DUP3 PUSH2 0x915 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0xA1C JUMPI PUSH2 0xA1C PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND ADD PUSH1 0x7F DUP2 SGT PUSH1 0x7F NOT DUP3 SLT OR ISZERO PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH1 0x7F NOT DUP2 SLT PUSH1 0x7F DUP3 SGT OR ISZERO PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x9F0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0x29 0x2B SHL 0xC3 MULMOD PUSH27 0x911BEBF8DD3BCE70E35992EAF622D26296AC4CF24DE9B37CF66473 PUSH16 0x6C634300081100330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDB337D1"
    },
    "38": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDB337D1"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDFBF53AE"
    },
    "60": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "64": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE802C36F"
    },
    "71": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "75": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF686AF77"
    },
    "82": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C"
    },
    "86": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3CCFE887"
    },
    "98": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "EQ",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4404A438"
    },
    "109": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "113": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAE6D9073"
    },
    "120": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA"
    },
    "124": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        3706
      ],
      "op": "REVERT",
      "path": "0"
    },
    "130": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "131": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "134": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90"
    },
    "137": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "138": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "140": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x931"
    },
    "143": {
      "fn": "Gobang.start",
      "jump": "i",
      "offset": [
        529,
        1182
      ],
      "op": "JUMP",
      "path": "0"
    },
    "144": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "145": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x171"
    },
    "148": {
      "fn": "Gobang.start",
      "jump": "i",
      "offset": [
        529,
        1182
      ],
      "op": "JUMP",
      "path": "0"
    },
    "149": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "150": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "STOP",
      "path": "0"
    },
    "151": {
      "offset": [
        409,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "154": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "155": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "158": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "165": {
      "op": "SHL"
    },
    "166": {
      "op": "SUB"
    },
    "167": {
      "offset": [
        409,
        436
      ],
      "op": "DUP2",
      "path": "0"
    },
    "168": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "AND",
      "path": "0"
    },
    "169": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "174": {
      "op": "SHL"
    },
    "175": {
      "offset": [
        409,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "176": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "DIV",
      "path": "0"
    },
    "177": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "179": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "AND",
      "path": "0"
    },
    "180": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "DUP3",
      "path": "0"
    },
    "181": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "JUMP",
      "path": "0"
    },
    "182": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "185": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "193": {
      "op": "SHL"
    },
    "194": {
      "op": "SUB"
    },
    "195": {
      "op": "SWAP1"
    },
    "196": {
      "op": "SWAP4"
    },
    "197": {
      "op": "AND"
    },
    "198": {
      "op": "DUP4"
    },
    "199": {
      "op": "MSTORE"
    },
    "200": {
      "op": "SWAP1"
    },
    "201": {
      "op": "ISZERO"
    },
    "202": {
      "op": "ISZERO"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "205": {
      "op": "DUP4"
    },
    "206": {
      "op": "ADD"
    },
    "207": {
      "op": "MSTORE"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "offset": [
        409,
        436
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "212": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "213": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "DUP1",
      "path": "0"
    },
    "214": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "215": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "SUB",
      "path": "0"
    },
    "216": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "217": {
      "fn": "Gobang.start",
      "offset": [
        409,
        436
      ],
      "op": "RETURN",
      "path": "0"
    },
    "218": {
      "offset": [
        295,
        322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "222": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "225": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "226": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "228": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x964"
    },
    "231": {
      "fn": "Gobang.start",
      "jump": "i",
      "offset": [
        295,
        322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "232": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "233": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x343"
    },
    "236": {
      "fn": "Gobang.start",
      "jump": "i",
      "offset": [
        295,
        322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "237": {
      "offset": [
        502,
        522
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "240": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "241": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "244": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "245": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "247": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "AND",
      "path": "0"
    },
    "248": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "DUP2",
      "path": "0"
    },
    "249": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "JUMP",
      "path": "0"
    },
    "250": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "253": {
      "fn": "Gobang.start",
      "offset": [
        502,
        522
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "254": {
      "op": "SWAP1"
    },
    "255": {
      "op": "ISZERO"
    },
    "256": {
      "op": "ISZERO"
    },
    "257": {
      "op": "DUP2"
    },
    "258": {
      "op": "MSTORE"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "261": {
      "op": "ADD"
    },
    "262": {
      "offset": [
        502,
        522
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "265": {
      "op": "JUMP"
    },
    "266": {
      "offset": [
        443,
        463
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "267": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "269": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "270": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "273": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "280": {
      "op": "SHL"
    },
    "281": {
      "op": "SUB"
    },
    "282": {
      "offset": [
        443,
        463
      ],
      "op": "DUP2",
      "path": "0"
    },
    "283": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "AND",
      "path": "0"
    },
    "284": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "offset": [
        443,
        463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "291": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "DIV",
      "path": "0"
    },
    "292": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "294": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "AND",
      "path": "0"
    },
    "295": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "DUP3",
      "path": "0"
    },
    "296": {
      "fn": "Gobang.start",
      "offset": [
        443,
        463
      ],
      "op": "JUMP",
      "path": "0"
    },
    "297": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "301": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x137"
    },
    "304": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "305": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "307": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98E"
    },
    "310": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        1244,
        2053
      ],
      "op": "JUMP",
      "path": "0"
    },
    "311": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "312": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36E"
    },
    "315": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        1244,
        2053
      ],
      "op": "JUMP",
      "path": "0"
    },
    "316": {
      "offset": [
        242,
        289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "317": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "320": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "323": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "324": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "326": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B8"
    },
    "329": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        242,
        289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "333": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "335": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "336": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "337": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "338": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "339": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "340": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "341": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "343": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "344": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "345": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "352": {
      "op": "SHL"
    },
    "353": {
      "op": "SUB"
    },
    "354": {
      "offset": [
        242,
        289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "355": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "AND",
      "path": "0"
    },
    "356": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "361": {
      "op": "SHL"
    },
    "362": {
      "offset": [
        242,
        289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "363": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "DIV",
      "path": "0"
    },
    "364": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "366": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "AND",
      "path": "0"
    },
    "367": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "DUP3",
      "path": "0"
    },
    "368": {
      "fn": "Gobang.play",
      "offset": [
        242,
        289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "369": {
      "fn": "Gobang.start",
      "offset": [
        529,
        1182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "370": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x40"
    },
    "372": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "373": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "374": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "375": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP3",
      "path": "0"
    },
    "376": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "ADD",
      "path": "0"
    },
    "377": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP3",
      "path": "0"
    },
    "378": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "385": {
      "op": "SHL"
    },
    "386": {
      "op": "SUB"
    },
    "387": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP5",
      "path": "0"
    },
    "388": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP2",
      "path": "0"
    },
    "389": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "AND",
      "path": "0"
    },
    "390": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "391": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP4",
      "path": "0"
    },
    "392": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "393": {
      "fn": "Gobang.start",
      "offset": [
        673,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "395": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "397": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "398": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP6",
      "path": "0"
    },
    "399": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "ADD",
      "path": "0"
    },
    "400": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP3",
      "path": "0"
    },
    "401": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "DUP2",
      "path": "0"
    },
    "402": {
      "fn": "Gobang.start",
      "offset": [
        656,
        678
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "405": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "406": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "DUP5",
      "path": "0"
    },
    "407": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "408": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "DUP4",
      "path": "0"
    },
    "409": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "410": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "411": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "DUP7",
      "path": "0"
    },
    "412": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "DUP5",
      "path": "0"
    },
    "413": {
      "fn": "Gobang.start",
      "offset": [
        630,
        653
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "414": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "415": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "416": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "DUP7",
      "path": "0"
    },
    "417": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "418": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "419": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "420": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "421": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "DUP7",
      "path": "0"
    },
    "422": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "AND",
      "path": "0"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "op": "SUB"
    },
    "431": {
      "op": "NOT"
    },
    "432": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "433": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "DUP4",
      "path": "0"
    },
    "434": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "AND",
      "path": "0"
    },
    "435": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "OR",
      "path": "0"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "442": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "443": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "444": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "DUP3",
      "path": "0"
    },
    "445": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "MUL",
      "path": "0"
    },
    "446": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "OR",
      "path": "0"
    },
    "447": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "DUP8",
      "path": "0"
    },
    "448": {
      "fn": "Gobang.start",
      "offset": [
        630,
        678
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "449": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 1
    },
    "450": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "451": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP1",
      "path": "0"
    },
    "452": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP10",
      "path": "0"
    },
    "453": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "ADD",
      "path": "0"
    },
    "454": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP10",
      "path": "0"
    },
    "455": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "456": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP10",
      "path": "0"
    },
    "457": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP8",
      "path": "0"
    },
    "458": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "AND",
      "path": "0"
    },
    "459": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP1",
      "path": "0"
    },
    "460": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP3",
      "path": "0"
    },
    "461": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "462": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "463": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP6",
      "path": "0"
    },
    "464": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "ADD",
      "path": "0"
    },
    "465": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP8",
      "path": "0"
    },
    "466": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "467": {
      "fn": "Gobang.start",
      "offset": [
        714,
        737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "468": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "469": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "DUP8",
      "path": "0"
    },
    "470": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "471": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "472": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "DUP7",
      "path": "0"
    },
    "473": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "474": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "475": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "476": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "DUP6",
      "path": "0"
    },
    "477": {
      "fn": "Gobang.start",
      "offset": [
        688,
        711
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "478": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "479": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "480": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "DUP9",
      "path": "0"
    },
    "481": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "482": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "483": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "484": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "485": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "DUP8",
      "path": "0"
    },
    "486": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "AND",
      "path": "0"
    },
    "487": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "488": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "DUP4",
      "path": "0"
    },
    "489": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "AND",
      "path": "0"
    },
    "490": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "491": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "492": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "493": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "OR",
      "path": "0"
    },
    "494": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "495": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "496": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "497": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "498": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "MUL",
      "path": "0"
    },
    "499": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "500": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "501": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "502": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "OR",
      "path": "0"
    },
    "503": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "DUP8",
      "path": "0"
    },
    "504": {
      "fn": "Gobang.start",
      "offset": [
        688,
        737
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "505": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 2
    },
    "506": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "507": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP4",
      "path": "0"
    },
    "508": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "515": {
      "op": "SHL"
    },
    "516": {
      "op": "SUB"
    },
    "517": {
      "op": "NOT"
    },
    "518": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "519": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP3",
      "path": "0"
    },
    "520": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "AND",
      "path": "0"
    },
    "521": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "522": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP9",
      "path": "0"
    },
    "523": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "AND",
      "path": "0"
    },
    "524": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "525": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP4",
      "path": "0"
    },
    "526": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "OR",
      "path": "0"
    },
    "527": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP7",
      "path": "0"
    },
    "528": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "529": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "530": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "531": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "533": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "534": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP6",
      "path": "0"
    },
    "535": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "536": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DIV",
      "path": "0"
    },
    "537": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "538": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "AND",
      "path": "0"
    },
    "539": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "540": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "541": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP6",
      "path": "0"
    },
    "542": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "MUL",
      "path": "0"
    },
    "543": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "544": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "DUP5",
      "path": "0"
    },
    "545": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "AND",
      "path": "0"
    },
    "546": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "548": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "OR",
      "path": "0"
    },
    "549": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "OR",
      "path": "0"
    },
    "550": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "551": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "552": {
      "fn": "Gobang.start",
      "offset": [
        748,
        787
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "553": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 3
    },
    "554": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "555": {
      "fn": "Gobang.start",
      "offset": [
        797,
        810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "557": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "558": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "559": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "560": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "561": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "562": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "AND",
      "path": "0"
    },
    "563": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "564": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "565": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "AND",
      "path": "0"
    },
    "566": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "DUP8",
      "path": "0"
    },
    "567": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "OR",
      "path": "0"
    },
    "568": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "DUP7",
      "path": "0"
    },
    "569": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "570": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "571": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "572": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "573": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "AND",
      "path": "0"
    },
    "574": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "575": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "576": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "OR",
      "path": "0"
    },
    "577": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "578": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "DUP5",
      "path": "0"
    },
    "579": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "580": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "DIV",
      "path": "0"
    },
    "581": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "AND",
      "path": "0"
    },
    "582": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "583": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "584": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "586": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "MUL",
      "path": "0"
    },
    "587": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "588": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "589": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "590": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "OR",
      "path": "0"
    },
    "591": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "592": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "593": {
      "fn": "Gobang.start",
      "offset": [
        797,
        836
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "594": {
      "fn": "Gobang.start",
      "offset": [
        880,
        1025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "Gobang.start",
      "offset": [
        902,
        904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "597": {
      "fn": "Gobang.start",
      "offset": [
        898,
        899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "598": {
      "fn": "Gobang.start",
      "offset": [
        898,
        904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "600": {
      "fn": "Gobang.start",
      "offset": [
        898,
        904
      ],
      "op": "AND",
      "path": "0"
    },
    "601": {
      "fn": "Gobang.start",
      "offset": [
        898,
        904
      ],
      "op": "LT",
      "path": "0"
    },
    "602": {
      "fn": "Gobang.start",
      "offset": [
        880,
        1025
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "603": {
      "fn": "Gobang.start",
      "offset": [
        880,
        1025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "606": {
      "fn": "Gobang.start",
      "offset": [
        880,
        1025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "607": {
      "fn": "Gobang.start",
      "offset": [
        930,
        937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "609": {
      "fn": "Gobang.start",
      "offset": [
        925,
        1015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "610": {
      "fn": "Gobang.start",
      "offset": [
        947,
        949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "612": {
      "fn": "Gobang.start",
      "offset": [
        943,
        944
      ],
      "op": "DUP2",
      "path": "0"
    },
    "613": {
      "fn": "Gobang.start",
      "offset": [
        943,
        949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "615": {
      "fn": "Gobang.start",
      "offset": [
        943,
        949
      ],
      "op": "AND",
      "path": "0"
    },
    "616": {
      "fn": "Gobang.start",
      "offset": [
        943,
        949
      ],
      "op": "LT",
      "path": "0"
    },
    "617": {
      "fn": "Gobang.start",
      "offset": [
        925,
        1015
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "618": {
      "fn": "Gobang.start",
      "offset": [
        925,
        1015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CD"
    },
    "621": {
      "fn": "Gobang.start",
      "offset": [
        925,
        1015
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "622": {
      "fn": "Gobang.start",
      "offset": [
        999,
        1000
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "624": {
      "fn": "Gobang.start",
      "offset": [
        974,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "626": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "628": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "DUP5",
      "path": "0"
    },
    "629": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "AND",
      "path": "0"
    },
    "630": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "632": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "633": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "LT",
      "path": "0"
    },
    "634": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x285"
    },
    "637": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "638": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x285"
    },
    "641": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "644": {
      "fn": "Gobang.start",
      "jump": "i",
      "offset": [
        974,
        993
      ],
      "op": "JUMP",
      "path": "0"
    },
    "645": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "646": {
      "fn": "Gobang.start",
      "offset": [
        974,
        993
      ],
      "op": "ADD",
      "path": "0"
    },
    "647": {
      "fn": "Gobang.start",
      "offset": [
        994,
        995
      ],
      "op": "DUP3",
      "path": "0"
    },
    "648": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "650": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "AND",
      "path": "0"
    },
    "651": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "653": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "DUP2",
      "path": "0"
    },
    "654": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "LT",
      "path": "0"
    },
    "655": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29A"
    },
    "658": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "659": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29A"
    },
    "662": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "665": {
      "fn": "Gobang.start",
      "jump": "i",
      "offset": [
        974,
        996
      ],
      "op": "JUMP",
      "path": "0"
    },
    "666": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "667": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "669": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "670": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "DUP3",
      "path": "0"
    },
    "671": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "DUP3",
      "path": "0"
    },
    "672": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "DIV",
      "path": "0"
    },
    "673": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "ADD",
      "path": "0"
    },
    "674": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "675": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "676": {
      "fn": "Gobang.start",
      "offset": [
        974,
        996
      ],
      "op": "MOD",
      "path": "0"
    },
    "677": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "680": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "EXP",
      "path": "0"
    },
    "681": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "DUP2",
      "path": "0"
    },
    "682": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "683": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "DUP2",
      "path": "0"
    },
    "684": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "686": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "MUL",
      "path": "0"
    },
    "687": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "NOT",
      "path": "0"
    },
    "688": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "AND",
      "path": "0"
    },
    "689": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "690": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "DUP4",
      "path": "0"
    },
    "691": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "693": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "AND",
      "path": "0"
    },
    "694": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "MUL",
      "path": "0"
    },
    "695": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "OR",
      "path": "0"
    },
    "696": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "697": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "698": {
      "fn": "Gobang.start",
      "offset": [
        974,
        1000
      ],
      "op": "POP",
      "path": "0"
    },
    "699": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 5
    },
    "700": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "701": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C5"
    },
    "704": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "705": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA06"
    },
    "708": {
      "fn": "Gobang.start",
      "jump": "i",
      "offset": [
        951,
        954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "709": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "710": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "711": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "POP",
      "path": "0"
    },
    "712": {
      "fn": "Gobang.start",
      "offset": [
        951,
        954
      ],
      "op": "POP",
      "path": "0"
    },
    "713": {
      "fn": "Gobang.start",
      "offset": [
        925,
        1015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x261"
    },
    "716": {
      "fn": "Gobang.start",
      "offset": [
        925,
        1015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "717": {
      "fn": "Gobang.start",
      "offset": [
        925,
        1015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "fn": "Gobang.start",
      "offset": [
        906,
        909
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 6
    },
    "720": {
      "fn": "Gobang.start",
      "offset": [
        906,
        909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8"
    },
    "723": {
      "fn": "Gobang.start",
      "offset": [
        906,
        909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "724": {
      "fn": "Gobang.start",
      "offset": [
        906,
        909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA06"
    },
    "727": {
      "fn": "Gobang.start",
      "jump": "i",
      "offset": [
        906,
        909
      ],
      "op": "JUMP",
      "path": "0"
    },
    "728": {
      "fn": "Gobang.start",
      "offset": [
        906,
        909
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "729": {
      "fn": "Gobang.start",
      "offset": [
        906,
        909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "730": {
      "fn": "Gobang.start",
      "offset": [
        906,
        909
      ],
      "op": "POP",
      "path": "0"
    },
    "731": {
      "fn": "Gobang.start",
      "offset": [
        906,
        909
      ],
      "op": "POP",
      "path": "0"
    },
    "732": {
      "fn": "Gobang.start",
      "offset": [
        880,
        1025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "735": {
      "fn": "Gobang.start",
      "offset": [
        880,
        1025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "736": {
      "fn": "Gobang.start",
      "offset": [
        880,
        1025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "fn": "Gobang.start",
      "offset": [
        1098,
        1108
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "740": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "742": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "743": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "747": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "748": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "750": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "752": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "753": {
      "fn": "Gobang.start",
      "offset": [
        1084,
        1109
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "754": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "DUP1",
      "path": "0"
    },
    "755": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "756": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "758": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "DUP1",
      "path": "0"
    },
    "759": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "766": {
      "op": "SHL"
    },
    "767": {
      "op": "SUB"
    },
    "768": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "769": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "770": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "AND",
      "path": "0"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "op": "NOT"
    },
    "780": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "DUP4",
      "path": "0"
    },
    "781": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "AND",
      "path": "0"
    },
    "782": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "783": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "OR",
      "path": "0"
    },
    "784": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "DUP3",
      "path": "0"
    },
    "785": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "786": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "787": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "op": "NOT"
    },
    "797": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "798": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "799": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "AND",
      "path": "0"
    },
    "800": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "801": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "802": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "OR",
      "path": "0"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "807": {
      "op": "SHL"
    },
    "808": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "809": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "DUP3",
      "path": "0"
    },
    "810": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "811": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "DIV",
      "path": "0"
    },
    "812": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "814": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "AND",
      "path": "0"
    },
    "815": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "816": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "817": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "818": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "819": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "MUL",
      "path": "0"
    },
    "820": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "OR",
      "path": "0"
    },
    "821": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "822": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "823": {
      "op": "POP"
    },
    "824": {
      "fn": "Gobang.start",
      "offset": [
        1068,
        1109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "826": {
      "fn": "Gobang.start",
      "offset": [
        1159,
        1175
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "827": {
      "fn": "Gobang.start",
      "offset": [
        1159,
        1175
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "828": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "830": {
      "op": "NOT"
    },
    "831": {
      "fn": "Gobang.start",
      "offset": [
        1159,
        1175
      ],
      "op": "AND",
      "path": "0"
    },
    "832": {
      "fn": "Gobang.start",
      "offset": [
        1159,
        1175
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "833": {
      "fn": "Gobang.start",
      "offset": [
        1159,
        1175
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "834": {
      "fn": "Gobang.start",
      "jump": "o",
      "offset": [
        529,
        1182
      ],
      "op": "JUMP",
      "path": "0"
    },
    "835": {
      "offset": [
        295,
        322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "836": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "838": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "839": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "841": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "842": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "LT",
      "path": "0"
    },
    "843": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x353"
    },
    "846": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "847": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "849": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "DUP1",
      "path": "0"
    },
    "850": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "REVERT",
      "path": "0"
    },
    "851": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "852": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "ADD",
      "path": "0"
    },
    "853": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "860": {
      "op": "SHL"
    },
    "861": {
      "op": "SUB"
    },
    "862": {
      "offset": [
        295,
        322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "863": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "AND",
      "path": "0"
    },
    "864": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "offset": [
        295,
        322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "872": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "DIV",
      "path": "0"
    },
    "873": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "875": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "AND",
      "path": "0"
    },
    "876": {
      "fn": "Gobang.start",
      "offset": [
        295,
        322
      ],
      "op": "DUP3",
      "path": "0"
    },
    "877": {
      "fn": "Gobang.start",
      "jump": "o",
      "offset": [
        295,
        322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "878": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "879": {
      "fn": "Gobang.play",
      "offset": [
        1341,
        1349
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x14"
    },
    "881": {
      "fn": "Gobang.play",
      "offset": [
        1341,
        1349
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "882": {
      "fn": "Gobang.play",
      "offset": [
        1341,
        1349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "884": {
      "fn": "Gobang.play",
      "offset": [
        1341,
        1349
      ],
      "op": "AND",
      "path": "0"
    },
    "885": {
      "branch": 37,
      "fn": "Gobang.play",
      "offset": [
        1340,
        1349
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "886": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B2"
    },
    "889": {
      "branch": 37,
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "890": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "892": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "901": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "904": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "906": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "907": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "ADD",
      "path": "0"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "913": {
      "op": "DUP3"
    },
    "914": {
      "op": "ADD"
    },
    "915": {
      "op": "MSTORE"
    },
    "916": {
      "op": "PUSH9",
      "value": "0x23B0B6B29037BB32B9"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "931": {
      "op": "DUP3"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "938": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "940": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "941": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "942": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "943": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "SUB",
      "path": "0"
    },
    "944": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "945": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "946": {
      "fn": "Gobang.play",
      "offset": [
        1332,
        1363
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "947": {
      "fn": "Gobang.play",
      "offset": [
        1431,
        1444
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x12"
    },
    "949": {
      "fn": "Gobang.play",
      "offset": [
        1431,
        1449
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "fn": "Gobang.play",
      "offset": [
        1431,
        1449
      ],
      "op": "AND",
      "path": "0"
    },
    "959": {
      "fn": "Gobang.play",
      "offset": [
        1417,
        1427
      ],
      "op": "CALLER",
      "path": "0"
    },
    "960": {
      "branch": 38,
      "fn": "Gobang.play",
      "offset": [
        1417,
        1449
      ],
      "op": "EQ",
      "path": "0"
    },
    "961": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC"
    },
    "964": {
      "branch": 38,
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "965": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "967": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "968": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "976": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "979": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "981": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "DUP3",
      "path": "0"
    },
    "982": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "ADD",
      "path": "0"
    },
    "983": {
      "op": "MSTORE"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "988": {
      "op": "DUP3"
    },
    "989": {
      "op": "ADD"
    },
    "990": {
      "op": "MSTORE"
    },
    "991": {
      "op": "PUSH13",
      "value": "0x2737BA103CB7BAB9103A3AB937"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1010": {
      "op": "DUP3"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "MSTORE"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1015": {
      "op": "ADD"
    },
    "1016": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "1019": {
      "op": "JUMP"
    },
    "1020": {
      "fn": "Gobang.play",
      "offset": [
        1409,
        1467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1021": {
      "fn": "Gobang.play",
      "offset": [
        1541,
        1543
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0xF"
    },
    "1023": {
      "fn": "Gobang.play",
      "offset": [
        1537,
        1538
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1024": {
      "fn": "Gobang.play",
      "offset": [
        1537,
        1543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1026": {
      "fn": "Gobang.play",
      "offset": [
        1537,
        1543
      ],
      "op": "AND",
      "path": "0"
    },
    "1027": {
      "branch": 39,
      "fn": "Gobang.play",
      "offset": [
        1537,
        1543
      ],
      "op": "LT",
      "path": "0"
    },
    "1028": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1553
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1029": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1553
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1030": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D"
    },
    "1033": {
      "branch": 39,
      "fn": "Gobang.play",
      "offset": [
        1527,
        1553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1034": {
      "op": "POP"
    },
    "1035": {
      "branch": 40,
      "fn": "Gobang.play",
      "offset": [
        1547,
        1553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1037": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1038": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1039": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1563
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1040": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "1043": {
      "branch": 40,
      "fn": "Gobang.play",
      "offset": [
        1527,
        1563
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1044": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1563
      ],
      "op": "POP",
      "path": "0"
    },
    "1045": {
      "fn": "Gobang.play",
      "offset": [
        1561,
        1563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1047": {
      "fn": "Gobang.play",
      "offset": [
        1557,
        1558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1048": {
      "fn": "Gobang.play",
      "offset": [
        1557,
        1563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1050": {
      "fn": "Gobang.play",
      "offset": [
        1557,
        1563
      ],
      "op": "AND",
      "path": "0"
    },
    "1051": {
      "branch": 41,
      "fn": "Gobang.play",
      "offset": [
        1557,
        1563
      ],
      "op": "LT",
      "path": "0"
    },
    "1052": {
      "fn": "Gobang.play",
      "offset": [
        1527,
        1563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45B"
    },
    "1056": {
      "branch": 41,
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1057": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1059": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1068": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1071": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1073": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1074": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "1075": {
      "op": "MSTORE"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "op": "PUSH16",
      "value": "0x24B73B30B634B2103837B9B4BA34B7B7"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1105": {
      "op": "DUP3"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1110": {
      "op": "ADD"
    },
    "1111": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "1114": {
      "op": "JUMP"
    },
    "1115": {
      "fn": "Gobang.play",
      "offset": [
        1519,
        1584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1116": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1654
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x3"
    },
    "1118": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1120": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1121": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "AND",
      "path": "0"
    },
    "1122": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1124": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1125": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "LT",
      "path": "0"
    },
    "1126": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x471"
    },
    "1129": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1130": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x471"
    },
    "1133": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1136": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        1644,
        1663
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1137": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1138": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1663
      ],
      "op": "ADD",
      "path": "0"
    },
    "1139": {
      "fn": "Gobang.play",
      "offset": [
        1664,
        1665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1140": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1142": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "AND",
      "path": "0"
    },
    "1143": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1145": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1146": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "LT",
      "path": "0"
    },
    "1147": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x486"
    },
    "1150": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1151": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x486"
    },
    "1154": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1157": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        1644,
        1666
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1158": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1159": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1161": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1162": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "DIV",
      "path": "0"
    },
    "1163": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1164": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1165": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "ADD",
      "path": "0"
    },
    "1166": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1167": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1169": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1171": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1172": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1173": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "AND",
      "path": "0"
    },
    "1174": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1177": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "EXP",
      "path": "0"
    },
    "1178": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1179": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "DIV",
      "path": "0"
    },
    "1180": {
      "fn": "Gobang.play",
      "offset": [
        1644,
        1666
      ],
      "op": "AND",
      "path": "0"
    },
    "1181": {
      "branch": 42,
      "fn": "Gobang.play",
      "offset": [
        1644,
        1671
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1182": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DD"
    },
    "1185": {
      "branch": 42,
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1186": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1188": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1195": {
      "op": "SHL"
    },
    "1196": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1200": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1202": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1203": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "ADD",
      "path": "0"
    },
    "1204": {
      "op": "MSTORE"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1209": {
      "op": "DUP3"
    },
    "1210": {
      "op": "ADD"
    },
    "1211": {
      "op": "MSTORE"
    },
    "1212": {
      "op": "PUSH17",
      "value": "0x141BDCDA5D1A5BDB881BD8D8DD5C1A5959"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1232": {
      "op": "SHL"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1235": {
      "op": "DUP3"
    },
    "1236": {
      "op": "ADD"
    },
    "1237": {
      "op": "MSTORE"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1240": {
      "op": "ADD"
    },
    "1241": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "1244": {
      "op": "JUMP"
    },
    "1245": {
      "fn": "Gobang.play",
      "offset": [
        1636,
        1694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1246": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x12"
    },
    "1248": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1768
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1253": {
      "op": "SHL"
    },
    "1254": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1768
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1255": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1768
      ],
      "op": "DIV",
      "path": "0"
    },
    "1256": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1258": {
      "branch": 43,
      "fn": "Gobang.play",
      "offset": [
        1747,
        1768
      ],
      "op": "AND",
      "path": "0"
    },
    "1259": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F5"
    },
    "1262": {
      "branch": 43,
      "fn": "Gobang.play",
      "offset": [
        1747,
        1776
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1263": {
      "fn": "Gobang.play",
      "offset": [
        1775,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1265": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F8"
    },
    "1268": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1269": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1270": {
      "fn": "Gobang.play",
      "offset": [
        1771,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1272": {
      "fn": "Gobang.play",
      "offset": [
        1747,
        1776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1273": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1275": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1277": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1278": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "AND",
      "path": "0"
    },
    "1279": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1281": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1282": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "LT",
      "path": "0"
    },
    "1283": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50E"
    },
    "1286": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1287": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50E"
    },
    "1290": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1293": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        1722,
        1741
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1294": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1295": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1741
      ],
      "op": "ADD",
      "path": "0"
    },
    "1296": {
      "fn": "Gobang.play",
      "offset": [
        1742,
        1743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1297": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1299": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "AND",
      "path": "0"
    },
    "1300": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1302": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1303": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "LT",
      "path": "0"
    },
    "1304": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x523"
    },
    "1307": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1308": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x523"
    },
    "1311": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1314": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        1722,
        1744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1315": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1316": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1318": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1319": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1320": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "DIV",
      "path": "0"
    },
    "1321": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1322": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1323": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "ADD",
      "path": "0"
    },
    "1324": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1325": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1326": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1328": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1329": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1330": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "AND",
      "path": "0"
    },
    "1331": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1333": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1334": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1335": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1744
      ],
      "op": "AND",
      "path": "0"
    },
    "1336": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1339": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "EXP",
      "path": "0"
    },
    "1340": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1341": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1342": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "MUL",
      "path": "0"
    },
    "1343": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1344": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1345": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "MUL",
      "path": "0"
    },
    "1346": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "NOT",
      "path": "0"
    },
    "1347": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "AND",
      "path": "0"
    },
    "1348": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1349": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1350": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1351": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "OR",
      "path": "0"
    },
    "1352": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1353": {
      "fn": "Gobang.play",
      "offset": [
        1722,
        1776
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1354": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x40"
    },
    "1356": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1357": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1358": {
      "op": "DUP6"
    },
    "1359": {
      "op": "DUP5"
    },
    "1360": {
      "op": "AND"
    },
    "1361": {
      "op": "DUP2"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "SWAP3"
    },
    "1364": {
      "op": "DUP5"
    },
    "1365": {
      "op": "AND"
    },
    "1366": {
      "op": "SWAP2"
    },
    "1367": {
      "op": "DUP4"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "SWAP2"
    },
    "1370": {
      "op": "SWAP1"
    },
    "1371": {
      "op": "SWAP2"
    },
    "1372": {
      "op": "MSTORE"
    },
    "1373": {
      "fn": "Gobang.play",
      "offset": [
        1806,
        1816
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1374": {
      "op": "SWAP1"
    },
    "1375": {
      "op": "DUP3"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "MSTORE"
    },
    "1378": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xD9967EF09DA59323A99E7255AF5417F707454DEB2D106CFA72B65525F86394C4"
    },
    "1411": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1414": {
      "op": "ADD"
    },
    "1415": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1417": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1418": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1419": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1420": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "SUB",
      "path": "0"
    },
    "1421": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1422": {
      "fn": "Gobang.play",
      "offset": [
        1791,
        1817
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1423": {
      "fn": "Gobang.play",
      "offset": [
        1831,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x598"
    },
    "1426": {
      "fn": "Gobang.play",
      "offset": [
        1840,
        1841
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1427": {
      "fn": "Gobang.play",
      "offset": [
        1842,
        1843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1428": {
      "fn": "Gobang.play",
      "offset": [
        1831,
        1839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x692"
    },
    "1431": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        1831,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1432": {
      "branch": 44,
      "fn": "Gobang.play",
      "offset": [
        1831,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1433": {
      "fn": "Gobang.play",
      "offset": [
        1827,
        2047
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1434": {
      "fn": "Gobang.play",
      "offset": [
        1827,
        2047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x617"
    },
    "1437": {
      "branch": 44,
      "fn": "Gobang.play",
      "offset": [
        1827,
        2047
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1438": {
      "fn": "Gobang.play",
      "offset": [
        1860,
        1868
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x14"
    },
    "1440": {
      "fn": "Gobang.play",
      "offset": [
        1860,
        1875
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1441": {
      "fn": "Gobang.play",
      "offset": [
        1860,
        1875
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1444": {
      "op": "NOT"
    },
    "1445": {
      "fn": "Gobang.play",
      "offset": [
        1860,
        1875
      ],
      "op": "AND",
      "path": "0"
    },
    "1446": {
      "fn": "Gobang.play",
      "offset": [
        1871,
        1875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1448": {
      "fn": "Gobang.play",
      "offset": [
        1860,
        1875
      ],
      "op": "OR",
      "path": "0"
    },
    "1449": {
      "fn": "Gobang.play",
      "offset": [
        1860,
        1875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1450": {
      "fn": "Gobang.play",
      "offset": [
        1860,
        1875
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1451": {
      "fn": "Gobang.play",
      "offset": [
        1898,
        1911
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x12"
    },
    "1453": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1454": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "1456": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1457": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1464": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1465": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "DIV",
      "path": "0"
    },
    "1466": {
      "fn": "Gobang.play",
      "offset": [
        1860,
        1875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1468": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "AND",
      "path": "0"
    },
    "1469": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1470": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1471": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "MUL",
      "path": "0"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1478": {
      "op": "SHL"
    },
    "1479": {
      "op": "SUB"
    },
    "1480": {
      "op": "NOT"
    },
    "1481": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1482": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1483": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "AND",
      "path": "0"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "op": "SUB"
    },
    "1492": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1493": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1494": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "AND",
      "path": "0"
    },
    "1495": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1496": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1497": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1498": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "OR",
      "path": "0"
    },
    "1499": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1500": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1501": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1502": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "OR",
      "path": "0"
    },
    "1503": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1504": {
      "fn": "Gobang.play",
      "offset": [
        1889,
        1911
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1505": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x40"
    },
    "1507": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1508": {
      "fn": "Gobang.play",
      "offset": [
        1939,
        1949
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1509": {
      "op": "DUP2"
    },
    "1510": {
      "op": "MSTORE"
    },
    "1511": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF556AD7790E70877EDCF3B3BB441255DEF8A405FAA0DFDB005A02FA8E557BCA9"
    },
    "1544": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1547": {
      "op": "ADD"
    },
    "1548": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1550": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1551": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1552": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1553": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "SUB",
      "path": "0"
    },
    "1554": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1555": {
      "fn": "Gobang.play",
      "offset": [
        1930,
        1950
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1556": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "POP",
      "path": "0"
    },
    "1557": {
      "fn": "Gobang.play",
      "offset": [
        1244,
        2053
      ],
      "op": "POP",
      "path": "0"
    },
    "1558": {
      "fn": "Gobang.play",
      "jump": "o",
      "offset": [
        1244,
        2053
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1559": {
      "fn": "Gobang.play",
      "offset": [
        1827,
        2047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1560": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2019
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x12"
    },
    "1562": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2027
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1563": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1565": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2027
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1572": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2027
      ],
      "op": "DIV",
      "path": "0"
    },
    "1573": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1575": {
      "branch": 45,
      "fn": "Gobang.play",
      "offset": [
        2006,
        2027
      ],
      "op": "AND",
      "path": "0"
    },
    "1576": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x632"
    },
    "1579": {
      "branch": 45,
      "fn": "Gobang.play",
      "offset": [
        2006,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1580": {
      "fn": "Gobang.play",
      "offset": [
        2034,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1582": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x635"
    },
    "1585": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1586": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1587": {
      "fn": "Gobang.play",
      "offset": [
        2030,
        2031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1589": {
      "fn": "Gobang.play",
      "offset": [
        2006,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1590": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1592": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "AND",
      "path": "0"
    },
    "1593": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1595": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1596": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "LT",
      "path": "0"
    },
    "1597": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x648"
    },
    "1600": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1601": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x648"
    },
    "1604": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1607": {
      "fn": "Gobang.play",
      "jump": "i",
      "offset": [
        1995,
        2036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1608": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1609": {
      "fn": "Gobang.play",
      "offset": [
        1995,
        2036
      ],
      "op": "ADD",
      "path": "0"
    },
    "1610": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1611": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1612": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        1992
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "1614": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1615": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "op": "SUB"
    },
    "1624": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1625": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1626": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "AND",
      "path": "0"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1633": {
      "op": "SHL"
    },
    "1634": {
      "op": "SUB"
    },
    "1635": {
      "op": "NOT"
    },
    "1636": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1637": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "AND",
      "path": "0"
    },
    "1638": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1639": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "OR",
      "path": "0"
    },
    "1640": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1641": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1642": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1643": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "op": "SUB"
    },
    "1652": {
      "op": "NOT"
    },
    "1653": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1654": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1655": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "AND",
      "path": "0"
    },
    "1656": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1657": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1658": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "OR",
      "path": "0"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1665": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1666": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1667": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "DIV",
      "path": "0"
    },
    "1668": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1670": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "AND",
      "path": "0"
    },
    "1671": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1672": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1673": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1674": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1675": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "MUL",
      "path": "0"
    },
    "1676": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "OR",
      "path": "0"
    },
    "1677": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1678": {
      "fn": "Gobang.play",
      "offset": [
        1979,
        2036
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "fn": "Gobang.play",
      "jump": "o",
      "offset": [
        1244,
        2053
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1682": {
      "fn": "Gobang.checkWin",
      "offset": [
        2112,
        2542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1683": {
      "fn": "Gobang.checkWin",
      "offset": [
        2170,
        2174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1685": {
      "fn": "Gobang.checkWin",
      "offset": [
        2238,
        2259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A2"
    },
    "1688": {
      "fn": "Gobang.checkWin",
      "offset": [
        2248,
        2249
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1689": {
      "fn": "Gobang.checkWin",
      "offset": [
        2251,
        2252
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1690": {
      "fn": "Gobang.checkWin",
      "offset": [
        2254,
        2255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1692": {
      "fn": "Gobang.checkWin",
      "offset": [
        2257,
        2258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1694": {
      "fn": "Gobang.checkWin",
      "offset": [
        2238,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70A"
    },
    "1697": {
      "fn": "Gobang.checkWin",
      "jump": "i",
      "offset": [
        2238,
        2259
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1698": {
      "branch": 46,
      "fn": "Gobang.checkWin",
      "offset": [
        2238,
        2259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1699": {
      "fn": "Gobang.checkWin",
      "offset": [
        2234,
        2272
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1700": {
      "fn": "Gobang.checkWin",
      "offset": [
        2234,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AF"
    },
    "1703": {
      "branch": 46,
      "fn": "Gobang.checkWin",
      "offset": [
        2234,
        2272
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1704": {
      "op": "POP"
    },
    "1705": {
      "fn": "Gobang.checkWin",
      "offset": [
        2268,
        2272
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x1"
    },
    "1707": {
      "fn": "Gobang.checkWin",
      "offset": [
        2261,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1710": {
      "fn": "Gobang.checkWin",
      "offset": [
        2261,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1711": {
      "fn": "Gobang.checkWin",
      "offset": [
        2234,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1712": {
      "fn": "Gobang.checkWin",
      "offset": [
        2334,
        2355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BD"
    },
    "1715": {
      "fn": "Gobang.checkWin",
      "offset": [
        2344,
        2345
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1716": {
      "fn": "Gobang.checkWin",
      "offset": [
        2347,
        2348
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1717": {
      "fn": "Gobang.checkWin",
      "offset": [
        2350,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1719": {
      "fn": "Gobang.checkWin",
      "offset": [
        2353,
        2354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1721": {
      "fn": "Gobang.checkWin",
      "offset": [
        2334,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70A"
    },
    "1724": {
      "fn": "Gobang.checkWin",
      "jump": "i",
      "offset": [
        2334,
        2355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1725": {
      "branch": 47,
      "fn": "Gobang.checkWin",
      "offset": [
        2334,
        2355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1726": {
      "fn": "Gobang.checkWin",
      "offset": [
        2330,
        2368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1727": {
      "fn": "Gobang.checkWin",
      "offset": [
        2330,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CA"
    },
    "1730": {
      "branch": 47,
      "fn": "Gobang.checkWin",
      "offset": [
        2330,
        2368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1731": {
      "op": "POP"
    },
    "1732": {
      "fn": "Gobang.checkWin",
      "offset": [
        2364,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "1734": {
      "fn": "Gobang.checkWin",
      "offset": [
        2357,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1737": {
      "fn": "Gobang.checkWin",
      "offset": [
        2357,
        2368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1738": {
      "fn": "Gobang.checkWin",
      "offset": [
        2330,
        2368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1739": {
      "fn": "Gobang.checkWin",
      "offset": [
        2430,
        2451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D7"
    },
    "1742": {
      "fn": "Gobang.checkWin",
      "offset": [
        2440,
        2441
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1743": {
      "fn": "Gobang.checkWin",
      "offset": [
        2443,
        2444
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1744": {
      "fn": "Gobang.checkWin",
      "offset": [
        2446,
        2447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1746": {
      "fn": "Gobang.checkWin",
      "offset": [
        2449,
        2450
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1747": {
      "fn": "Gobang.checkWin",
      "offset": [
        2430,
        2439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70A"
    },
    "1750": {
      "fn": "Gobang.checkWin",
      "jump": "i",
      "offset": [
        2430,
        2451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1751": {
      "branch": 48,
      "fn": "Gobang.checkWin",
      "offset": [
        2430,
        2451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1752": {
      "fn": "Gobang.checkWin",
      "offset": [
        2426,
        2464
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1753": {
      "fn": "Gobang.checkWin",
      "offset": [
        2426,
        2464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E4"
    },
    "1756": {
      "branch": 48,
      "fn": "Gobang.checkWin",
      "offset": [
        2426,
        2464
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "fn": "Gobang.checkWin",
      "offset": [
        2460,
        2464
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x1"
    },
    "1760": {
      "fn": "Gobang.checkWin",
      "offset": [
        2453,
        2464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1763": {
      "fn": "Gobang.checkWin",
      "offset": [
        2453,
        2464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1764": {
      "fn": "Gobang.checkWin",
      "offset": [
        2426,
        2464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1765": {
      "fn": "Gobang.checkWin",
      "offset": [
        2478,
        2500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F3"
    },
    "1768": {
      "fn": "Gobang.checkWin",
      "offset": [
        2488,
        2489
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1769": {
      "fn": "Gobang.checkWin",
      "offset": [
        2491,
        2492
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1772": {
      "op": "NOT"
    },
    "1773": {
      "fn": "Gobang.checkWin",
      "offset": [
        2498,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1775": {
      "fn": "Gobang.checkWin",
      "offset": [
        2478,
        2487
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70A"
    },
    "1778": {
      "fn": "Gobang.checkWin",
      "jump": "i",
      "offset": [
        2478,
        2500
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1779": {
      "branch": 49,
      "fn": "Gobang.checkWin",
      "offset": [
        2478,
        2500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1780": {
      "fn": "Gobang.checkWin",
      "offset": [
        2474,
        2513
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1781": {
      "fn": "Gobang.checkWin",
      "offset": [
        2474,
        2513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x700"
    },
    "1784": {
      "branch": 49,
      "fn": "Gobang.checkWin",
      "offset": [
        2474,
        2513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "fn": "Gobang.checkWin",
      "offset": [
        2509,
        2513
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x1"
    },
    "1788": {
      "fn": "Gobang.checkWin",
      "offset": [
        2502,
        2513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1791": {
      "fn": "Gobang.checkWin",
      "offset": [
        2502,
        2513
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1792": {
      "fn": "Gobang.checkWin",
      "offset": [
        2474,
        2513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "fn": "Gobang.checkWin",
      "offset": [
        2530,
        2535
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x0"
    },
    "1796": {
      "fn": "Gobang.checkWin",
      "offset": [
        2112,
        2542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1797": {
      "fn": "Gobang.checkWin",
      "offset": [
        2112,
        2542
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1798": {
      "fn": "Gobang.checkWin",
      "offset": [
        2112,
        2542
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1799": {
      "fn": "Gobang.checkWin",
      "offset": [
        2112,
        2542
      ],
      "op": "POP",
      "path": "0"
    },
    "1800": {
      "fn": "Gobang.checkWin",
      "offset": [
        2112,
        2542
      ],
      "op": "POP",
      "path": "0"
    },
    "1801": {
      "fn": "Gobang.checkWin",
      "jump": "o",
      "offset": [
        2112,
        2542
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1802": {
      "fn": "Gobang.checkLine",
      "offset": [
        2607,
        3612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1803": {
      "fn": "Gobang.checkLine",
      "offset": [
        2684,
        2688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1805": {
      "fn": "Gobang.checkLine",
      "offset": [
        2684,
        2688
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1806": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1808": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1810": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1811": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "AND",
      "path": "0"
    },
    "1812": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1814": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1815": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "LT",
      "path": "0"
    },
    "1816": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x723"
    },
    "1819": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1820": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x723"
    },
    "1823": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1826": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        2714,
        2733
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1827": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1828": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2733
      ],
      "op": "ADD",
      "path": "0"
    },
    "1829": {
      "fn": "Gobang.checkLine",
      "offset": [
        2734,
        2735
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1830": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1832": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "AND",
      "path": "0"
    },
    "1833": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1835": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1836": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "LT",
      "path": "0"
    },
    "1837": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x738"
    },
    "1840": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1841": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x738"
    },
    "1844": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1847": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        2714,
        2736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1848": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1849": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1851": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1852": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "DIV",
      "path": "0"
    },
    "1853": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1854": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1855": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "ADD",
      "path": "0"
    },
    "1856": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1857": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1859": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1861": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1862": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1863": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "AND",
      "path": "0"
    },
    "1864": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1867": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "EXP",
      "path": "0"
    },
    "1868": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1869": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "DIV",
      "path": "0"
    },
    "1870": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "AND",
      "path": "0"
    },
    "1871": {
      "fn": "Gobang.checkLine",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "fn": "Gobang.checkLine",
      "offset": [
        2760,
        2761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1875": {
      "fn": "Gobang.checkLine",
      "offset": [
        2746,
        2757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1877": {
      "fn": "Gobang.checkLine",
      "offset": [
        2811,
        2823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75E"
    },
    "1880": {
      "fn": "Gobang.checkLine",
      "offset": [
        2821,
        2823
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1881": {
      "fn": "Gobang.checkLine",
      "offset": [
        2816,
        2817
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1882": {
      "fn": "Gobang.checkLine",
      "offset": [
        2811,
        2823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA25"
    },
    "1885": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        2811,
        2823
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1886": {
      "fn": "Gobang.checkLine",
      "offset": [
        2811,
        2823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1887": {
      "fn": "Gobang.checkLine",
      "offset": [
        2795,
        2824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "fn": "Gobang.checkLine",
      "offset": [
        2834,
        2841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1891": {
      "fn": "Gobang.checkLine",
      "offset": [
        2850,
        2862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76C"
    },
    "1894": {
      "fn": "Gobang.checkLine",
      "offset": [
        2860,
        2862
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1895": {
      "fn": "Gobang.checkLine",
      "offset": [
        2855,
        2856
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1896": {
      "fn": "Gobang.checkLine",
      "offset": [
        2850,
        2862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA25"
    },
    "1899": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        2850,
        2862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1900": {
      "fn": "Gobang.checkLine",
      "offset": [
        2850,
        2862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1901": {
      "fn": "Gobang.checkLine",
      "offset": [
        2834,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1902": {
      "fn": "Gobang.checkLine",
      "offset": [
        2834,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "1903": {
      "fn": "Gobang.checkLine",
      "offset": [
        2873,
        3183
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1904": {
      "fn": "Gobang.checkLine",
      "offset": [
        2894,
        2896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1906": {
      "fn": "Gobang.checkLine",
      "offset": [
        2890,
        2891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1907": {
      "fn": "Gobang.checkLine",
      "offset": [
        2890,
        2896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1909": {
      "fn": "Gobang.checkLine",
      "offset": [
        2890,
        2896
      ],
      "op": "AND",
      "path": "0"
    },
    "1910": {
      "fn": "Gobang.checkLine",
      "offset": [
        2890,
        2896
      ],
      "op": "LT",
      "path": "0"
    },
    "1911": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1912": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2906
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1913": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x780"
    },
    "1916": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "fn": "Gobang.checkLine",
      "offset": [
        2900,
        2906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1920": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1921": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2916
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1922": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2916
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1923": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78F"
    },
    "1926": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2916
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1927": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2916
      ],
      "op": "POP",
      "path": "0"
    },
    "1928": {
      "fn": "Gobang.checkLine",
      "offset": [
        2914,
        2916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1930": {
      "fn": "Gobang.checkLine",
      "offset": [
        2910,
        2911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1931": {
      "fn": "Gobang.checkLine",
      "offset": [
        2910,
        2916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1933": {
      "fn": "Gobang.checkLine",
      "offset": [
        2910,
        2916
      ],
      "op": "AND",
      "path": "0"
    },
    "1934": {
      "fn": "Gobang.checkLine",
      "offset": [
        2910,
        2916
      ],
      "op": "LT",
      "path": "0"
    },
    "1935": {
      "fn": "Gobang.checkLine",
      "offset": [
        2880,
        2916
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1936": {
      "fn": "Gobang.checkLine",
      "offset": [
        2873,
        3183
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1937": {
      "fn": "Gobang.checkLine",
      "offset": [
        2873,
        3183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82D"
    },
    "1940": {
      "fn": "Gobang.checkLine",
      "offset": [
        2873,
        3183
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1941": {
      "fn": "Gobang.checkLine",
      "offset": [
        2963,
        2968
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1942": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1944": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2968
      ],
      "op": "AND",
      "path": "0"
    },
    "1945": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1947": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1949": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2953
      ],
      "op": "ADD",
      "path": "0"
    },
    "1950": {
      "fn": "Gobang.checkLine",
      "offset": [
        2954,
        2955
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1951": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1953": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "AND",
      "path": "0"
    },
    "1954": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1956": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1957": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "LT",
      "path": "0"
    },
    "1958": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "1961": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1962": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "1965": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1968": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        2937,
        2956
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1969": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1970": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2956
      ],
      "op": "ADD",
      "path": "0"
    },
    "1971": {
      "fn": "Gobang.checkLine",
      "offset": [
        2957,
        2958
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1972": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1974": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "AND",
      "path": "0"
    },
    "1975": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1977": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1978": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "LT",
      "path": "0"
    },
    "1979": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C6"
    },
    "1982": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1983": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C6"
    },
    "1986": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "1989": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        2937,
        2959
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1990": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1991": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1993": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1994": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "DIV",
      "path": "0"
    },
    "1995": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1996": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1997": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "ADD",
      "path": "0"
    },
    "1998": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1999": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2001": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2003": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2004": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2005": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "AND",
      "path": "0"
    },
    "2006": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2009": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "EXP",
      "path": "0"
    },
    "2010": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2011": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "DIV",
      "path": "0"
    },
    "2012": {
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2959
      ],
      "op": "AND",
      "path": "0"
    },
    "2013": {
      "branch": 50,
      "fn": "Gobang.checkLine",
      "offset": [
        2937,
        2968
      ],
      "op": "SUB",
      "path": "0"
    },
    "2014": {
      "fn": "Gobang.checkLine",
      "offset": [
        2933,
        3099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80B"
    },
    "2017": {
      "branch": 50,
      "fn": "Gobang.checkLine",
      "offset": [
        2933,
        3099
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2018": {
      "fn": "Gobang.checkLine",
      "offset": [
        2988,
        2995
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 24
    },
    "2019": {
      "fn": "Gobang.checkLine",
      "offset": [
        2988,
        2995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EB"
    },
    "2022": {
      "fn": "Gobang.checkLine",
      "offset": [
        2988,
        2995
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2023": {
      "fn": "Gobang.checkLine",
      "offset": [
        2988,
        2995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA06"
    },
    "2026": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        2988,
        2995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2027": {
      "fn": "Gobang.checkLine",
      "offset": [
        2988,
        2995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2028": {
      "fn": "Gobang.checkLine",
      "offset": [
        2988,
        2995
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2029": {
      "fn": "Gobang.checkLine",
      "offset": [
        2988,
        2995
      ],
      "op": "POP",
      "path": "0"
    },
    "2030": {
      "fn": "Gobang.checkLine",
      "offset": [
        2988,
        2995
      ],
      "op": "POP",
      "path": "0"
    },
    "2031": {
      "fn": "Gobang.checkLine",
      "offset": [
        3017,
        3022
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2032": {
      "fn": "Gobang.checkLine",
      "offset": [
        3017,
        3027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2034": {
      "fn": "Gobang.checkLine",
      "offset": [
        3017,
        3027
      ],
      "op": "AND",
      "path": "0"
    },
    "2035": {
      "fn": "Gobang.checkLine",
      "offset": [
        3026,
        3027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2037": {
      "branch": 51,
      "fn": "Gobang.checkLine",
      "offset": [
        3017,
        3027
      ],
      "op": "SUB",
      "path": "0"
    },
    "2038": {
      "fn": "Gobang.checkLine",
      "offset": [
        3013,
        3040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x806"
    },
    "2041": {
      "branch": 51,
      "fn": "Gobang.checkLine",
      "offset": [
        3013,
        3040
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2042": {
      "fn": "Gobang.checkLine",
      "offset": [
        3036,
        3040
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x1"
    },
    "2044": {
      "fn": "Gobang.checkLine",
      "offset": [
        3029,
        3040
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2045": {
      "fn": "Gobang.checkLine",
      "offset": [
        3029,
        3040
      ],
      "op": "POP",
      "path": "0"
    },
    "2046": {
      "fn": "Gobang.checkLine",
      "offset": [
        3029,
        3040
      ],
      "op": "POP",
      "path": "0"
    },
    "2047": {
      "fn": "Gobang.checkLine",
      "offset": [
        3029,
        3040
      ],
      "op": "POP",
      "path": "0"
    },
    "2048": {
      "fn": "Gobang.checkLine",
      "offset": [
        3029,
        3040
      ],
      "op": "POP",
      "path": "0"
    },
    "2049": {
      "fn": "Gobang.checkLine",
      "offset": [
        3029,
        3040
      ],
      "op": "POP",
      "path": "0"
    },
    "2050": {
      "fn": "Gobang.checkLine",
      "offset": [
        3029,
        3040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90D"
    },
    "2053": {
      "fn": "Gobang.checkLine",
      "offset": [
        3029,
        3040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2054": {
      "fn": "Gobang.checkLine",
      "offset": [
        3013,
        3040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2055": {
      "fn": "Gobang.checkLine",
      "offset": [
        2933,
        3099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x810"
    },
    "2058": {
      "fn": "Gobang.checkLine",
      "offset": [
        2933,
        3099
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2059": {
      "fn": "Gobang.checkLine",
      "offset": [
        2933,
        3099
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2060": {
      "fn": "Gobang.checkLine",
      "offset": [
        3079,
        3084
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0x82D"
    },
    "2063": {
      "fn": "Gobang.checkLine",
      "offset": [
        3079,
        3084
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2064": {
      "fn": "Gobang.checkLine",
      "offset": [
        2933,
        3099
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2065": {
      "fn": "Gobang.checkLine",
      "offset": [
        3122,
        3134
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0x81A"
    },
    "2068": {
      "fn": "Gobang.checkLine",
      "offset": [
        3132,
        3134
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2069": {
      "fn": "Gobang.checkLine",
      "offset": [
        3127,
        3128
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2070": {
      "fn": "Gobang.checkLine",
      "offset": [
        3122,
        3134
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA25"
    },
    "2073": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3122,
        3134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2074": {
      "fn": "Gobang.checkLine",
      "offset": [
        3122,
        3134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2075": {
      "fn": "Gobang.checkLine",
      "offset": [
        3112,
        3135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2076": {
      "op": "POP"
    },
    "2077": {
      "fn": "Gobang.checkLine",
      "offset": [
        3159,
        3171
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x826"
    },
    "2080": {
      "fn": "Gobang.checkLine",
      "offset": [
        3169,
        3171
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2081": {
      "fn": "Gobang.checkLine",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2082": {
      "fn": "Gobang.checkLine",
      "offset": [
        3159,
        3171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA25"
    },
    "2085": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3159,
        3171
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2086": {
      "fn": "Gobang.checkLine",
      "offset": [
        3159,
        3171
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2087": {
      "fn": "Gobang.checkLine",
      "offset": [
        3149,
        3172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2088": {
      "fn": "Gobang.checkLine",
      "offset": [
        3149,
        3172
      ],
      "op": "POP",
      "path": "0"
    },
    "2089": {
      "fn": "Gobang.checkLine",
      "offset": [
        2873,
        3183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "2092": {
      "fn": "Gobang.checkLine",
      "offset": [
        2873,
        3183
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2093": {
      "fn": "Gobang.checkLine",
      "offset": [
        2873,
        3183
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2094": {
      "fn": "Gobang.checkLine",
      "offset": [
        3226,
        3238
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0x837"
    },
    "2097": {
      "fn": "Gobang.checkLine",
      "offset": [
        3236,
        3238
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2098": {
      "fn": "Gobang.checkLine",
      "offset": [
        3231,
        3232
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2099": {
      "fn": "Gobang.checkLine",
      "offset": [
        3226,
        3238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA46"
    },
    "2102": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3226,
        3238
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2103": {
      "fn": "Gobang.checkLine",
      "offset": [
        3226,
        3238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2104": {
      "fn": "Gobang.checkLine",
      "offset": [
        3216,
        3239
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2105": {
      "op": "POP"
    },
    "2106": {
      "fn": "Gobang.checkLine",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0x843"
    },
    "2109": {
      "fn": "Gobang.checkLine",
      "offset": [
        3269,
        3271
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2110": {
      "fn": "Gobang.checkLine",
      "offset": [
        3264,
        3265
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2111": {
      "fn": "Gobang.checkLine",
      "offset": [
        3259,
        3271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA46"
    },
    "2114": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3259,
        3271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2115": {
      "fn": "Gobang.checkLine",
      "offset": [
        3259,
        3271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2116": {
      "fn": "Gobang.checkLine",
      "offset": [
        3249,
        3272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2117": {
      "fn": "Gobang.checkLine",
      "offset": [
        3249,
        3272
      ],
      "op": "POP",
      "path": "0"
    },
    "2118": {
      "fn": "Gobang.checkLine",
      "offset": [
        3282,
        3584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2119": {
      "fn": "Gobang.checkLine",
      "offset": [
        3303,
        3305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2121": {
      "fn": "Gobang.checkLine",
      "offset": [
        3299,
        3300
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2122": {
      "fn": "Gobang.checkLine",
      "offset": [
        3299,
        3305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2124": {
      "fn": "Gobang.checkLine",
      "offset": [
        3299,
        3305
      ],
      "op": "AND",
      "path": "0"
    },
    "2125": {
      "fn": "Gobang.checkLine",
      "offset": [
        3299,
        3305
      ],
      "op": "LT",
      "path": "0"
    },
    "2126": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2127": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3315
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2128": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x857"
    },
    "2131": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2132": {
      "op": "POP"
    },
    "2133": {
      "fn": "Gobang.checkLine",
      "offset": [
        3309,
        3315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2135": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2136": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3325
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2137": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3325
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2138": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x866"
    },
    "2141": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3325
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2142": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3325
      ],
      "op": "POP",
      "path": "0"
    },
    "2143": {
      "fn": "Gobang.checkLine",
      "offset": [
        3323,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2145": {
      "fn": "Gobang.checkLine",
      "offset": [
        3319,
        3320
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2146": {
      "fn": "Gobang.checkLine",
      "offset": [
        3319,
        3325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2148": {
      "fn": "Gobang.checkLine",
      "offset": [
        3319,
        3325
      ],
      "op": "AND",
      "path": "0"
    },
    "2149": {
      "fn": "Gobang.checkLine",
      "offset": [
        3319,
        3325
      ],
      "op": "LT",
      "path": "0"
    },
    "2150": {
      "fn": "Gobang.checkLine",
      "offset": [
        3289,
        3325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2151": {
      "fn": "Gobang.checkLine",
      "offset": [
        3282,
        3584
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2152": {
      "fn": "Gobang.checkLine",
      "offset": [
        3282,
        3584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x904"
    },
    "2155": {
      "fn": "Gobang.checkLine",
      "offset": [
        3282,
        3584
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2156": {
      "fn": "Gobang.checkLine",
      "offset": [
        3372,
        3377
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2157": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2159": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3377
      ],
      "op": "AND",
      "path": "0"
    },
    "2160": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2162": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2164": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3362
      ],
      "op": "ADD",
      "path": "0"
    },
    "2165": {
      "fn": "Gobang.checkLine",
      "offset": [
        3363,
        3364
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2166": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2168": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "AND",
      "path": "0"
    },
    "2169": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2171": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2172": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "LT",
      "path": "0"
    },
    "2173": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x888"
    },
    "2176": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2177": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x888"
    },
    "2180": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "2183": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3346,
        3365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2184": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2185": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3365
      ],
      "op": "ADD",
      "path": "0"
    },
    "2186": {
      "fn": "Gobang.checkLine",
      "offset": [
        3366,
        3367
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2187": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2189": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "AND",
      "path": "0"
    },
    "2190": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2192": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2193": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "LT",
      "path": "0"
    },
    "2194": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89D"
    },
    "2197": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2198": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89D"
    },
    "2201": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "2204": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3346,
        3368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2205": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2206": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2208": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2209": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "DIV",
      "path": "0"
    },
    "2210": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2211": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2212": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "ADD",
      "path": "0"
    },
    "2213": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2214": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2216": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2218": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2219": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2220": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "AND",
      "path": "0"
    },
    "2221": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2224": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "EXP",
      "path": "0"
    },
    "2225": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2226": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "DIV",
      "path": "0"
    },
    "2227": {
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3368
      ],
      "op": "AND",
      "path": "0"
    },
    "2228": {
      "branch": 52,
      "fn": "Gobang.checkLine",
      "offset": [
        3346,
        3377
      ],
      "op": "SUB",
      "path": "0"
    },
    "2229": {
      "fn": "Gobang.checkLine",
      "offset": [
        3342,
        3508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E2"
    },
    "2232": {
      "branch": 52,
      "fn": "Gobang.checkLine",
      "offset": [
        3342,
        3508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2233": {
      "fn": "Gobang.checkLine",
      "offset": [
        3397,
        3404
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 31
    },
    "2234": {
      "fn": "Gobang.checkLine",
      "offset": [
        3397,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C2"
    },
    "2237": {
      "fn": "Gobang.checkLine",
      "offset": [
        3397,
        3404
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2238": {
      "fn": "Gobang.checkLine",
      "offset": [
        3397,
        3404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA06"
    },
    "2241": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3397,
        3404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2242": {
      "fn": "Gobang.checkLine",
      "offset": [
        3397,
        3404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2243": {
      "fn": "Gobang.checkLine",
      "offset": [
        3397,
        3404
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2244": {
      "fn": "Gobang.checkLine",
      "offset": [
        3397,
        3404
      ],
      "op": "POP",
      "path": "0"
    },
    "2245": {
      "fn": "Gobang.checkLine",
      "offset": [
        3397,
        3404
      ],
      "op": "POP",
      "path": "0"
    },
    "2246": {
      "fn": "Gobang.checkLine",
      "offset": [
        3426,
        3431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2247": {
      "fn": "Gobang.checkLine",
      "offset": [
        3426,
        3436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2249": {
      "fn": "Gobang.checkLine",
      "offset": [
        3426,
        3436
      ],
      "op": "AND",
      "path": "0"
    },
    "2250": {
      "fn": "Gobang.checkLine",
      "offset": [
        3435,
        3436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2252": {
      "branch": 53,
      "fn": "Gobang.checkLine",
      "offset": [
        3426,
        3436
      ],
      "op": "SUB",
      "path": "0"
    },
    "2253": {
      "fn": "Gobang.checkLine",
      "offset": [
        3422,
        3449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DD"
    },
    "2256": {
      "branch": 53,
      "fn": "Gobang.checkLine",
      "offset": [
        3422,
        3449
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2257": {
      "fn": "Gobang.checkLine",
      "offset": [
        3445,
        3449
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x1"
    },
    "2259": {
      "fn": "Gobang.checkLine",
      "offset": [
        3438,
        3449
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2260": {
      "fn": "Gobang.checkLine",
      "offset": [
        3438,
        3449
      ],
      "op": "POP",
      "path": "0"
    },
    "2261": {
      "fn": "Gobang.checkLine",
      "offset": [
        3438,
        3449
      ],
      "op": "POP",
      "path": "0"
    },
    "2262": {
      "fn": "Gobang.checkLine",
      "offset": [
        3438,
        3449
      ],
      "op": "POP",
      "path": "0"
    },
    "2263": {
      "fn": "Gobang.checkLine",
      "offset": [
        3438,
        3449
      ],
      "op": "POP",
      "path": "0"
    },
    "2264": {
      "fn": "Gobang.checkLine",
      "offset": [
        3438,
        3449
      ],
      "op": "POP",
      "path": "0"
    },
    "2265": {
      "fn": "Gobang.checkLine",
      "offset": [
        3438,
        3449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90D"
    },
    "2268": {
      "fn": "Gobang.checkLine",
      "offset": [
        3438,
        3449
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2269": {
      "fn": "Gobang.checkLine",
      "offset": [
        3422,
        3449
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2270": {
      "fn": "Gobang.checkLine",
      "offset": [
        3342,
        3508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E7"
    },
    "2273": {
      "fn": "Gobang.checkLine",
      "offset": [
        3342,
        3508
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2274": {
      "fn": "Gobang.checkLine",
      "offset": [
        3342,
        3508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2275": {
      "fn": "Gobang.checkLine",
      "offset": [
        3488,
        3493
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x904"
    },
    "2278": {
      "fn": "Gobang.checkLine",
      "offset": [
        3488,
        3493
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2279": {
      "fn": "Gobang.checkLine",
      "offset": [
        3342,
        3508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2280": {
      "fn": "Gobang.checkLine",
      "offset": [
        3527,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 34,
      "value": "0x8F1"
    },
    "2283": {
      "fn": "Gobang.checkLine",
      "offset": [
        3537,
        3539
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2284": {
      "fn": "Gobang.checkLine",
      "offset": [
        3532,
        3533
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2285": {
      "fn": "Gobang.checkLine",
      "offset": [
        3527,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA46"
    },
    "2288": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3527,
        3539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2289": {
      "fn": "Gobang.checkLine",
      "offset": [
        3527,
        3539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2290": {
      "fn": "Gobang.checkLine",
      "offset": [
        3517,
        3540
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "fn": "Gobang.checkLine",
      "offset": [
        3560,
        3572
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0x8FD"
    },
    "2295": {
      "fn": "Gobang.checkLine",
      "offset": [
        3570,
        3572
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2296": {
      "fn": "Gobang.checkLine",
      "offset": [
        3565,
        3566
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2297": {
      "fn": "Gobang.checkLine",
      "offset": [
        3560,
        3572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA46"
    },
    "2300": {
      "fn": "Gobang.checkLine",
      "jump": "i",
      "offset": [
        3560,
        3572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2301": {
      "fn": "Gobang.checkLine",
      "offset": [
        3560,
        3572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2302": {
      "fn": "Gobang.checkLine",
      "offset": [
        3550,
        3573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2303": {
      "fn": "Gobang.checkLine",
      "offset": [
        3550,
        3573
      ],
      "op": "POP",
      "path": "0"
    },
    "2304": {
      "fn": "Gobang.checkLine",
      "offset": [
        3282,
        3584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x846"
    },
    "2307": {
      "fn": "Gobang.checkLine",
      "offset": [
        3282,
        3584
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2308": {
      "fn": "Gobang.checkLine",
      "offset": [
        3282,
        3584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2309": {
      "fn": "Gobang.checkLine",
      "offset": [
        3600,
        3605
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x0"
    },
    "2311": {
      "fn": "Gobang.checkLine",
      "offset": [
        3593,
        3605
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2312": {
      "fn": "Gobang.checkLine",
      "offset": [
        3593,
        3605
      ],
      "op": "POP",
      "path": "0"
    },
    "2313": {
      "fn": "Gobang.checkLine",
      "offset": [
        3593,
        3605
      ],
      "op": "POP",
      "path": "0"
    },
    "2314": {
      "fn": "Gobang.checkLine",
      "offset": [
        3593,
        3605
      ],
      "op": "POP",
      "path": "0"
    },
    "2315": {
      "fn": "Gobang.checkLine",
      "offset": [
        3593,
        3605
      ],
      "op": "POP",
      "path": "0"
    },
    "2316": {
      "fn": "Gobang.checkLine",
      "offset": [
        3593,
        3605
      ],
      "op": "POP",
      "path": "0"
    },
    "2317": {
      "fn": "Gobang.checkLine",
      "offset": [
        2607,
        3612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2318": {
      "fn": "Gobang.checkLine",
      "offset": [
        2607,
        3612
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2319": {
      "fn": "Gobang.checkLine",
      "offset": [
        2607,
        3612
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2320": {
      "fn": "Gobang.checkLine",
      "offset": [
        2607,
        3612
      ],
      "op": "POP",
      "path": "0"
    },
    "2321": {
      "fn": "Gobang.checkLine",
      "offset": [
        2607,
        3612
      ],
      "op": "POP",
      "path": "0"
    },
    "2322": {
      "fn": "Gobang.checkLine",
      "offset": [
        2607,
        3612
      ],
      "op": "POP",
      "path": "0"
    },
    "2323": {
      "fn": "Gobang.checkLine",
      "offset": [
        2607,
        3612
      ],
      "op": "POP",
      "path": "0"
    },
    "2324": {
      "fn": "Gobang.checkLine",
      "jump": "o",
      "offset": [
        2607,
        3612
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2325": {
      "op": "JUMPDEST"
    },
    "2326": {
      "op": "DUP1"
    },
    "2327": {
      "op": "CALLDATALOAD"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "op": "DUP2"
    },
    "2337": {
      "op": "AND"
    },
    "2338": {
      "op": "DUP2"
    },
    "2339": {
      "op": "EQ"
    },
    "2340": {
      "op": "PUSH2",
      "value": "0x92C"
    },
    "2343": {
      "op": "JUMPI"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2346": {
      "op": "DUP1"
    },
    "2347": {
      "op": "REVERT"
    },
    "2348": {
      "op": "JUMPDEST"
    },
    "2349": {
      "op": "SWAP2"
    },
    "2350": {
      "op": "SWAP1"
    },
    "2351": {
      "op": "POP"
    },
    "2352": {
      "jump": "o",
      "op": "JUMP"
    },
    "2353": {
      "op": "JUMPDEST"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2356": {
      "op": "DUP1"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2359": {
      "op": "DUP4"
    },
    "2360": {
      "op": "DUP6"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "op": "SLT"
    },
    "2363": {
      "op": "ISZERO"
    },
    "2364": {
      "op": "PUSH2",
      "value": "0x944"
    },
    "2367": {
      "op": "JUMPI"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2370": {
      "op": "DUP1"
    },
    "2371": {
      "op": "REVERT"
    },
    "2372": {
      "op": "JUMPDEST"
    },
    "2373": {
      "op": "PUSH2",
      "value": "0x94D"
    },
    "2376": {
      "op": "DUP4"
    },
    "2377": {
      "op": "PUSH2",
      "value": "0x915"
    },
    "2380": {
      "jump": "i",
      "op": "JUMP"
    },
    "2381": {
      "op": "JUMPDEST"
    },
    "2382": {
      "op": "SWAP2"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "op": "PUSH2",
      "value": "0x95B"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2389": {
      "op": "DUP5"
    },
    "2390": {
      "op": "ADD"
    },
    "2391": {
      "op": "PUSH2",
      "value": "0x915"
    },
    "2394": {
      "jump": "i",
      "op": "JUMP"
    },
    "2395": {
      "op": "JUMPDEST"
    },
    "2396": {
      "op": "SWAP1"
    },
    "2397": {
      "op": "POP"
    },
    "2398": {
      "op": "SWAP3"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "op": "SWAP3"
    },
    "2401": {
      "op": "SWAP1"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "jump": "o",
      "op": "JUMP"
    },
    "2404": {
      "op": "JUMPDEST"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2409": {
      "op": "DUP3"
    },
    "2410": {
      "op": "DUP5"
    },
    "2411": {
      "op": "SUB"
    },
    "2412": {
      "op": "SLT"
    },
    "2413": {
      "op": "ISZERO"
    },
    "2414": {
      "op": "PUSH2",
      "value": "0x976"
    },
    "2417": {
      "op": "JUMPI"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2420": {
      "op": "DUP1"
    },
    "2421": {
      "op": "REVERT"
    },
    "2422": {
      "op": "JUMPDEST"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "op": "CALLDATALOAD"
    },
    "2425": {
      "op": "SWAP2"
    },
    "2426": {
      "op": "SWAP1"
    },
    "2427": {
      "op": "POP"
    },
    "2428": {
      "jump": "o",
      "op": "JUMP"
    },
    "2429": {
      "op": "JUMPDEST"
    },
    "2430": {
      "op": "DUP1"
    },
    "2431": {
      "op": "CALLDATALOAD"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2434": {
      "op": "DUP2"
    },
    "2435": {
      "op": "AND"
    },
    "2436": {
      "op": "DUP2"
    },
    "2437": {
      "op": "EQ"
    },
    "2438": {
      "op": "PUSH2",
      "value": "0x92C"
    },
    "2441": {
      "op": "JUMPI"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2444": {
      "op": "DUP1"
    },
    "2445": {
      "op": "REVERT"
    },
    "2446": {
      "op": "JUMPDEST"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2449": {
      "op": "DUP1"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2452": {
      "op": "DUP4"
    },
    "2453": {
      "op": "DUP6"
    },
    "2454": {
      "op": "SUB"
    },
    "2455": {
      "op": "SLT"
    },
    "2456": {
      "op": "ISZERO"
    },
    "2457": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "2460": {
      "op": "JUMPI"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2463": {
      "op": "DUP1"
    },
    "2464": {
      "op": "REVERT"
    },
    "2465": {
      "op": "JUMPDEST"
    },
    "2466": {
      "op": "PUSH2",
      "value": "0x9AA"
    },
    "2469": {
      "op": "DUP4"
    },
    "2470": {
      "op": "PUSH2",
      "value": "0x97D"
    },
    "2473": {
      "jump": "i",
      "op": "JUMP"
    },
    "2474": {
      "op": "JUMPDEST"
    },
    "2475": {
      "op": "SWAP2"
    },
    "2476": {
      "op": "POP"
    },
    "2477": {
      "op": "PUSH2",
      "value": "0x95B"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2482": {
      "op": "DUP5"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "PUSH2",
      "value": "0x97D"
    },
    "2487": {
      "jump": "i",
      "op": "JUMP"
    },
    "2488": {
      "op": "JUMPDEST"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2493": {
      "op": "DUP3"
    },
    "2494": {
      "op": "DUP5"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "op": "SLT"
    },
    "2497": {
      "op": "ISZERO"
    },
    "2498": {
      "op": "PUSH2",
      "value": "0x9CA"
    },
    "2501": {
      "op": "JUMPI"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2504": {
      "op": "DUP1"
    },
    "2505": {
      "op": "REVERT"
    },
    "2506": {
      "op": "JUMPDEST"
    },
    "2507": {
      "op": "PUSH2",
      "value": "0x9D3"
    },
    "2510": {
      "op": "DUP3"
    },
    "2511": {
      "op": "PUSH2",
      "value": "0x915"
    },
    "2514": {
      "jump": "i",
      "op": "JUMP"
    },
    "2515": {
      "op": "JUMPDEST"
    },
    "2516": {
      "op": "SWAP4"
    },
    "2517": {
      "op": "SWAP3"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "jump": "o",
      "op": "JUMP"
    },
    "2522": {
      "op": "JUMPDEST"
    },
    "2523": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2530": {
      "op": "SHL"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2538": {
      "op": "MSTORE"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2543": {
      "op": "REVERT"
    },
    "2544": {
      "op": "JUMPDEST"
    },
    "2545": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2552": {
      "op": "SHL"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2560": {
      "op": "MSTORE"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2565": {
      "op": "REVERT"
    },
    "2566": {
      "op": "JUMPDEST"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2571": {
      "op": "DUP3"
    },
    "2572": {
      "op": "AND"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2575": {
      "op": "DUP2"
    },
    "2576": {
      "op": "SUB"
    },
    "2577": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2580": {
      "op": "JUMPI"
    },
    "2581": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2584": {
      "op": "PUSH2",
      "value": "0x9F0"
    },
    "2587": {
      "jump": "i",
      "op": "JUMP"
    },
    "2588": {
      "op": "JUMPDEST"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2591": {
      "op": "ADD"
    },
    "2592": {
      "op": "SWAP3"
    },
    "2593": {
      "op": "SWAP2"
    },
    "2594": {
      "op": "POP"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "jump": "o",
      "op": "JUMP"
    },
    "2597": {
      "op": "JUMPDEST"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2600": {
      "op": "DUP2"
    },
    "2601": {
      "op": "DUP2"
    },
    "2602": {
      "op": "SIGNEXTEND"
    },
    "2603": {
      "op": "SWAP1"
    },
    "2604": {
      "op": "DUP4"
    },
    "2605": {
      "op": "SWAP1"
    },
    "2606": {
      "op": "SIGNEXTEND"
    },
    "2607": {
      "op": "ADD"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2610": {
      "op": "DUP2"
    },
    "2611": {
      "op": "SGT"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2614": {
      "op": "NOT"
    },
    "2615": {
      "op": "DUP3"
    },
    "2616": {
      "op": "SLT"
    },
    "2617": {
      "op": "OR"
    },
    "2618": {
      "op": "ISZERO"
    },
    "2619": {
      "op": "PUSH2",
      "value": "0x704"
    },
    "2622": {
      "op": "JUMPI"
    },
    "2623": {
      "op": "PUSH2",
      "value": "0x704"
    },
    "2626": {
      "op": "PUSH2",
      "value": "0x9F0"
    },
    "2629": {
      "jump": "i",
      "op": "JUMP"
    },
    "2630": {
      "op": "JUMPDEST"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2633": {
      "op": "DUP3"
    },
    "2634": {
      "op": "DUP2"
    },
    "2635": {
      "op": "SIGNEXTEND"
    },
    "2636": {
      "op": "SWAP1"
    },
    "2637": {
      "op": "DUP3"
    },
    "2638": {
      "op": "SWAP1"
    },
    "2639": {
      "op": "SIGNEXTEND"
    },
    "2640": {
      "op": "SUB"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2643": {
      "op": "NOT"
    },
    "2644": {
      "op": "DUP2"
    },
    "2645": {
      "op": "SLT"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2648": {
      "op": "DUP3"
    },
    "2649": {
      "op": "SGT"
    },
    "2650": {
      "op": "OR"
    },
    "2651": {
      "op": "ISZERO"
    },
    "2652": {
      "op": "PUSH2",
      "value": "0x704"
    },
    "2655": {
      "op": "JUMPI"
    },
    "2656": {
      "op": "PUSH2",
      "value": "0x704"
    },
    "2659": {
      "op": "PUSH2",
      "value": "0x9F0"
    },
    "2662": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "0a2f217470a24f0bab5abb0ca786942e00f5ed55",
  "source": "pragma solidity ^0.8.0;\n\ncontract Gobang {\n    // \u5b9a\u4e49\u73a9\u5bb6\u7ed3\u6784\u4f53\n    struct Player {\n        address addr;\n        bool isBlack;\n    }\n\n    // \u5b9a\u4e49\u68cb\u76d8\u72b6\u6001\u7ed3\u6784\u4f53\n    struct Chessboard {\n        uint8[15][15] cells;\n    }\n\n    mapping(address => Player) public playerMapping;\n    Player[2] public playerList;\n\n    // \u5b9a\u4e49\u68cb\u76d8\u72b6\u6001\n    Chessboard chessboard;\n\n    // \u5b9a\u4e49\u5f53\u524d\u73a9\u5bb6\n    Player public currentPlayer;\n\n    Player public winner;\n\n    // \u5b9a\u4e49\u6e38\u620f\u7ed3\u675f\u6807\u5fd7\n    bool public gameOver;\n\n    function start(address _player1, address _player2) public {\n        // \u521d\u59cb\u5316\u73a9\u5bb6\u4fe1\u606f\n        playerMapping[_player1] = Player(_player1, true);\n        playerMapping[_player2] = Player(_player2, false);\n\n        playerList[0] = playerMapping[_player1];\n        playerList[1] = playerMapping[_player2];\n\n        // \u521d\u59cb\u5316\u68cb\u76d8\u72b6\u6001\n        for (uint8 i = 0; i < 15; i++) {\n            for (uint8 j = 0; j < 15; j++) {\n                chessboard.cells[i][j] = 0;\n            }\n        }\n\n        // \u521d\u59cb\u5316\u5f53\u524d\u73a9\u5bb6\n        currentPlayer = playerMapping[msg.sender];\n\n        // \u521d\u59cb\u5316\u6e38\u620f\u7ed3\u675f\u6807\u5fd7\n        gameOver = false;\n    }\n\n    // \u516c\u5f00\u51fd\u6570\uff0c\u7528\u4e8e\u63a5\u6536\u73a9\u5bb6\u7684\u843d\u5b50\u8bf7\u6c42\n    function play(uint8 x, uint8 y) public {\n        // \u68c0\u67e5\u6e38\u620f\u662f\u5426\u5df2\u7ed3\u675f\n        require(!gameOver, \"Game over\");\n        // \u68c0\u67e5\u73a9\u5bb6\u662f\u5426\u5408\u6cd5\n        require(msg.sender == currentPlayer.addr, \"Not your turn\");\n        // \u68c0\u67e5\u843d\u5b50\u5750\u6807\u662f\u5426\u5408\u6cd5\n        require(x >= 0 && x < 15 && y >= 0 && y < 15, \"Invalid position\");\n        // \u68c0\u67e5\u8be5\u4f4d\u7f6e\u662f\u5426\u5df2\u843d\u5b50\n        require(chessboard.cells[x][y] == 0 , \"Position occupied\");\n        // \u843d\u5b50\n        chessboard.cells[x][y] = currentPlayer.isBlack ? 1 : 2;\n        emit ChessSet(x, y, msg.sender);\n        if (checkWin(x,y)) {\n            gameOver = true;\n            winner = currentPlayer;\n            emit GameOver(msg.sender);\n        }else{\n            currentPlayer = playerList[currentPlayer.isBlack ? 1 : 0];\n        }\n    }\n\n    // \u79c1\u6709\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u67e5\u6e38\u620f\u662f\u5426\u7ed3\u675f\n    function checkWin(uint8 x, uint8 y) private view returns (bool) {\n        // \u68c0\u67e5\u6c34\u5e73\u65b9\u5411\u662f\u5426\u8fde\u6210\u4e94\u5b50\n        if (checkLine(x, y, 1, 0)) return true;\n        // \u68c0\u67e5\u7ad6\u76f4\u65b9\u5411\u662f\u5426\u8fde\u6210\u4e94\u5b50\n        if (checkLine(x, y, 0, 1)) return true;\n        // \u68c0\u67e5\u659c\u7ebf\u65b9\u5411\u662f\u5426\u8fde\u6210\u4e94\u5b50\n        if (checkLine(x, y, 1, 1)) return true;\n        if (checkLine(x, y, -1, 1)) return true;\n        return false;\n    }\n\n    // \u79c1\u6709\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u67e5\u5355\u884c\u662f\u5426\u8fde\u6210\u4e94\u5b50\n    function checkLine(uint8 x, uint8 y, int8 dx, int8 dy) private view returns (bool) {\n        uint8 color = chessboard.cells[x][y];\n        uint8 count = 1;\n        // \u5411\u5de6\u641c\u7d22\n        uint8 i = uint8(int8(x) + dx);\n        uint8 j = uint8(int8(y) + dy);\n        for (; i >= 0 && i < 15 && j >= 0 && j < 15;) {\n            if (chessboard.cells[i][j] == color) {\n                count++;\n                if (count == 5) return true;\n            } else {\n                break;\n            }\n            i = uint8(int8(i) + dx);\n            j = uint8(int8(j) + dy);\n        }\n        // \u5411\u53f3\u641c\u7d22\n        i = uint8(int8(x) - dx);\n        j = uint8(int8(y) - dy);\n        for (; i >= 0 && i < 15 && j >= 0 && j < 15;) {\n            if (chessboard.cells[i][j] == color) {\n                count++;\n                if (count == 5) return true;\n            } else {\n                break;\n            }\n        i = uint8(int8(i) - dx);\n        j = uint8(int8(j) - dy);\n        }\n        return false;\n    }\n\n    event GameOver(address winner);\n\n    event ChessSet(uint8 x, uint8 y, address player);\n}",
  "sourceMap": "25:3681:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Gobang.sol",
  "type": "contract"
}